"use strict";(self.webpackChunkfunever_front=self.webpackChunkfunever_front||[]).push([[8449],{58449:(e,t,r)=>{r.r(t),r.d(t,{Account:()=>C,AddressLookupTableAccount:()=>Fe,AddressLookupTableInstruction:()=>Fr,AddressLookupTableProgram:()=>Jr,Authorized:()=>on,BLOCKHASH_CACHE_TIMEOUT_MS:()=>$e,BPF_LOADER_DEPRECATED_PROGRAM_ID:()=>x,BPF_LOADER_PROGRAM_ID:()=>Le,BpfLoader:()=>Ke,COMPUTE_BUDGET_INSTRUCTION_LAYOUTS:()=>Xr,ComputeBudgetInstruction:()=>Gr,ComputeBudgetProgram:()=>Zr,Connection:()=>Mr,Ed25519Program:()=>$r,Enum:()=>E,EpochSchedule:()=>Me,FeeCalculatorLayout:()=>_e,Keypair:()=>Ur,LAMPORTS_PER_SOL:()=>Wn,LOOKUP_TABLE_INSTRUCTION_LAYOUTS:()=>Vr,Loader:()=>xe,Lockup:()=>an,MAX_SEED_LENGTH:()=>T,Message:()=>ee,MessageAccountKeys:()=>H,MessageV0:()=>te,NONCE_ACCOUNT_LENGTH:()=>Ee,NonceAccount:()=>Be,PACKET_DATA_SIZE:()=>L,PUBLIC_KEY_LENGTH:()=>O,PublicKey:()=>R,SIGNATURE_LENGTH_IN_BYTES:()=>z,SOLANA_SCHEMA:()=>B,STAKE_CONFIG_ID:()=>sn,STAKE_INSTRUCTION_LAYOUTS:()=>un,SYSTEM_INSTRUCTION_LAYOUTS:()=>Ne,SYSVAR_CLOCK_PUBKEY:()=>ue,SYSVAR_EPOCH_SCHEDULE_PUBKEY:()=>le,SYSVAR_INSTRUCTIONS_PUBKEY:()=>de,SYSVAR_RECENT_BLOCKHASHES_PUBKEY:()=>he,SYSVAR_RENT_PUBKEY:()=>ge,SYSVAR_REWARDS_PUBKEY:()=>pe,SYSVAR_SLOT_HASHES_PUBKEY:()=>me,SYSVAR_SLOT_HISTORY_PUBKEY:()=>ye,SYSVAR_STAKE_HISTORY_PUBKEY:()=>be,Secp256k1Program:()=>rn,SendTransactionError:()=>fe,SolanaJSONRPCError:()=>we,SolanaJSONRPCErrorCode:()=>ke,StakeAuthorizationLayout:()=>ln,StakeInstruction:()=>cn,StakeProgram:()=>dn,Struct:()=>P,SystemInstruction:()=>Oe,SystemProgram:()=>Re,Transaction:()=>oe,TransactionExpiredBlockheightExceededError:()=>Y,TransactionExpiredNonceInvalidError:()=>D,TransactionExpiredTimeoutError:()=>q,TransactionInstruction:()=>se,TransactionMessage:()=>ae,TransactionStatus:()=>ne,VALIDATOR_INFO_KEY:()=>bn,VERSION_PREFIX_MASK:()=>K,VOTE_PROGRAM_ID:()=>wn,ValidatorInfo:()=>kn,VersionedMessage:()=>re,VersionedTransaction:()=>ce,VoteAccount:()=>In,VoteAuthorizationLayout:()=>mn,VoteInit:()=>hn,VoteInstruction:()=>gn,VoteProgram:()=>yn,clusterApiUrl:()=>En,sendAndConfirmRawTransaction:()=>Bn,sendAndConfirmTransaction:()=>Se});var n=r(93325),i=r(63269),s=r(2914),o=r.n(s),a=r(75368),c=r.n(a),u=r(18466),l=r(18541),d=r(22707),h=r(73006),g=r(38003),p=r(37616),m=r.n(p),y=r(25064),b=r(65126),f=r(59817);const k=i.ev.utils.randomPrivateKey,w=()=>{const e=i.ev.utils.randomPrivateKey(),t=S(e),r=new Uint8Array(64);return r.set(e),r.set(t,32),{publicKey:t,secretKey:r}},S=i.ev.getPublicKey;function I(e){try{return i.ev.ExtendedPoint.fromHex(e),!0}catch{return!1}}const v=(e,t)=>i.ev.sign(e,t.slice(0,32)),A=i.ev.verify,_=e=>n.Buffer.isBuffer(e)?e:e instanceof Uint8Array?n.Buffer.from(e.buffer,e.byteOffset,e.byteLength):n.Buffer.from(e);class P{constructor(e){Object.assign(this,e)}encode(){return n.Buffer.from((0,l.serialize)(B,this))}static decode(e){return(0,l.deserialize)(B,this,e)}static decodeUnchecked(e){return(0,l.deserializeUnchecked)(B,this,e)}}class E extends P{constructor(e){if(super(e),this.enum="",1!==Object.keys(e).length)throw new Error("Enum can only take single value");Object.keys(e).map((e=>{this.enum=e}))}}const B=new Map;var W;const T=32,O=32;let N=1;class R extends P{constructor(e){if(super({}),this._bn=void 0,function(e){return void 0!==e._bn}(e))this._bn=e._bn;else{if("string"===typeof e){const t=c().decode(e);if(t.length!=O)throw new Error("Invalid public key input");this._bn=new(o())(t)}else this._bn=new(o())(e);if(this._bn.byteLength()>O)throw new Error("Invalid public key input")}}static unique(){const e=new R(N);return N+=1,new R(e.toBuffer())}equals(e){return this._bn.eq(e._bn)}toBase58(){return c().encode(this.toBytes())}toJSON(){return this.toBase58()}toBytes(){const e=this.toBuffer();return new Uint8Array(e.buffer,e.byteOffset,e.byteLength)}toBuffer(){const e=this._bn.toArrayLike(n.Buffer);if(e.length===O)return e;const t=n.Buffer.alloc(32);return e.copy(t,32-e.length),t}get[Symbol.toStringTag](){return"PublicKey(".concat(this.toString(),")")}toString(){return this.toBase58()}static async createWithSeed(e,t,r){const i=n.Buffer.concat([e.toBuffer(),n.Buffer.from(t),r.toBuffer()]),s=(0,u.s)(i);return new R(s)}static createProgramAddressSync(e,t){let r=n.Buffer.alloc(0);e.forEach((function(e){if(e.length>T)throw new TypeError("Max seed length exceeded");r=n.Buffer.concat([r,_(e)])})),r=n.Buffer.concat([r,t.toBuffer(),n.Buffer.from("ProgramDerivedAddress")]);const i=(0,u.s)(r);if(I(i))throw new Error("Invalid seeds, address must fall off the curve");return new R(i)}static async createProgramAddress(e,t){return this.createProgramAddressSync(e,t)}static findProgramAddressSync(e,t){let r,i=255;for(;0!=i;){try{const s=e.concat(n.Buffer.from([i]));r=this.createProgramAddressSync(s,t)}catch(s){if(s instanceof TypeError)throw s;i--;continue}return[r,i]}throw new Error("Unable to find a viable program address nonce")}static async findProgramAddress(e,t){return this.findProgramAddressSync(e,t)}static isOnCurve(e){return I(new R(e).toBytes())}}W=R,R.default=new W("11111111111111111111111111111111"),B.set(R,{kind:"struct",fields:[["_bn","u256"]]});class C{constructor(e){if(this._publicKey=void 0,this._secretKey=void 0,e){const t=_(e);if(64!==e.length)throw new Error("bad secret key size");this._publicKey=t.slice(32,64),this._secretKey=t.slice(0,32)}else this._secretKey=_(k()),this._publicKey=_(S(this._secretKey))}get publicKey(){return new R(this._publicKey)}get secretKey(){return n.Buffer.concat([this._secretKey,this._publicKey],64)}}const x=new R("BPFLoader1111111111111111111111111111111111"),L=1232,K=127,z=64;class Y extends Error{constructor(e){super("Signature ".concat(e," has expired: block height exceeded.")),this.signature=void 0,this.signature=e}}Object.defineProperty(Y.prototype,"name",{value:"TransactionExpiredBlockheightExceededError"});class q extends Error{constructor(e,t){super("Transaction was not confirmed in ".concat(t.toFixed(2)," seconds. It is ")+"unknown if it succeeded or failed. Check signature "+"".concat(e," using the Solana Explorer or CLI tools.")),this.signature=void 0,this.signature=e}}Object.defineProperty(q.prototype,"name",{value:"TransactionExpiredTimeoutError"});class D extends Error{constructor(e){super("Signature ".concat(e," has expired: the nonce is no longer valid.")),this.signature=void 0,this.signature=e}}Object.defineProperty(D.prototype,"name",{value:"TransactionExpiredNonceInvalidError"});class H{constructor(e,t){this.staticAccountKeys=void 0,this.accountKeysFromLookups=void 0,this.staticAccountKeys=e,this.accountKeysFromLookups=t}keySegments(){const e=[this.staticAccountKeys];return this.accountKeysFromLookups&&(e.push(this.accountKeysFromLookups.writable),e.push(this.accountKeysFromLookups.readonly)),e}get(e){for(const t of this.keySegments()){if(e<t.length)return t[e];e-=t.length}}get length(){return this.keySegments().flat().length}compileInstructions(e){if(this.length>256)throw new Error("Account index overflow encountered during compilation");const t=new Map;this.keySegments().flat().forEach(((e,r)=>{t.set(e.toBase58(),r)}));const r=e=>{const r=t.get(e.toBase58());if(void 0===r)throw new Error("Encountered an unknown instruction account key during compilation");return r};return e.map((e=>({programIdIndex:r(e.programId),accountKeyIndexes:e.keys.map((e=>r(e.pubkey))),data:e.data})))}}const j=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"publicKey";return d.av(32,e)},M=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"signature";return d.av(64,e)},U=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"string";const t=d.w3([d.DH("length"),d.DH("lengthPadding"),d.av(d.cY(d.DH(),-8),"chars")],e),r=t.decode.bind(t),i=t.encode.bind(t),s=t;return s.decode=(e,t)=>r(e,t).chars.toString(),s.encode=(e,t,r)=>{const s={chars:n.Buffer.from(e,"utf8")};return i(s,t,r)},s.alloc=e=>d.DH().span+d.DH().span+n.Buffer.from(e,"utf8").length,s};function V(e,t){const r=e=>{if(e.span>=0)return e.span;if("function"===typeof e.alloc)return e.alloc(t[e.property]);if("count"in e&&"elementLayout"in e){const n=t[e.property];if(Array.isArray(n))return n.length*r(e.elementLayout)}else if("fields"in e)return V({layout:e},t[e.property]);return 0};let n=0;return e.layout.fields.forEach((e=>{n+=r(e)})),n}function F(e){let t=0,r=0;for(;;){let n=e.shift();if(t|=(127&n)<<7*r,r+=1,0===(128&n))break}return t}function J(e,t){let r=t;for(;;){let t=127&r;if(r>>=7,0==r){e.push(t);break}t|=128,e.push(t)}}function G(e,t){if(!e)throw new Error(t||"Assertion failed")}class X{constructor(e,t){this.payer=void 0,this.keyMetaMap=void 0,this.payer=e,this.keyMetaMap=t}static compile(e,t){const r=new Map,n=e=>{const t=e.toBase58();let n=r.get(t);return void 0===n&&(n={isSigner:!1,isWritable:!1,isInvoked:!1},r.set(t,n)),n},i=n(t);i.isSigner=!0,i.isWritable=!0;for(const s of e){n(s.programId).isInvoked=!0;for(const e of s.keys){const t=n(e.pubkey);t.isSigner||(t.isSigner=e.isSigner),t.isWritable||(t.isWritable=e.isWritable)}}return new X(t,r)}getMessageComponents(){const e=[...this.keyMetaMap.entries()];G(e.length<=256,"Max static account keys length exceeded");const t=e.filter((e=>{let[,t]=e;return t.isSigner&&t.isWritable})),r=e.filter((e=>{let[,t]=e;return t.isSigner&&!t.isWritable})),n=e.filter((e=>{let[,t]=e;return!t.isSigner&&t.isWritable})),i=e.filter((e=>{let[,t]=e;return!t.isSigner&&!t.isWritable})),s={numRequiredSignatures:t.length+r.length,numReadonlySignedAccounts:r.length,numReadonlyUnsignedAccounts:i.length};{G(t.length>0,"Expected at least one writable signer key");const[e]=t[0];G(e===this.payer.toBase58(),"Expected first writable signer key to be the fee payer")}return[s,[...t.map((e=>{let[t]=e;return new R(t)})),...r.map((e=>{let[t]=e;return new R(t)})),...n.map((e=>{let[t]=e;return new R(t)})),...i.map((e=>{let[t]=e;return new R(t)}))]]}extractTableLookup(e){const[t,r]=this.drainKeysFoundInLookupTable(e.state.addresses,(e=>!e.isSigner&&!e.isInvoked&&e.isWritable)),[n,i]=this.drainKeysFoundInLookupTable(e.state.addresses,(e=>!e.isSigner&&!e.isInvoked&&!e.isWritable));if(0!==t.length||0!==n.length)return[{accountKey:e.key,writableIndexes:t,readonlyIndexes:n},{writable:r,readonly:i}]}drainKeysFoundInLookupTable(e,t){const r=new Array,n=new Array;for(const[i,s]of this.keyMetaMap.entries())if(t(s)){const t=new R(i),s=e.findIndex((e=>e.equals(t)));s>=0&&(G(s<256,"Max lookup table index exceeded"),r.push(s),n.push(t),this.keyMetaMap.delete(i))}return[r,n]}}const Z="Reached end of buffer unexpectedly";function Q(e){if(0===e.length)throw new Error(Z);return e.shift()}function $(e){for(var t,r=arguments.length,n=new Array(r>1?r-1:0),i=1;i<r;i++)n[i-1]=arguments[i];const[s]=n;if(2===n.length?s+(null!==(t=n[1])&&void 0!==t?t:0)>e.length:s>=e.length)throw new Error(Z);return e.splice(...n)}class ee{constructor(e){this.header=void 0,this.accountKeys=void 0,this.recentBlockhash=void 0,this.instructions=void 0,this.indexToProgramIds=new Map,this.header=e.header,this.accountKeys=e.accountKeys.map((e=>new R(e))),this.recentBlockhash=e.recentBlockhash,this.instructions=e.instructions,this.instructions.forEach((e=>this.indexToProgramIds.set(e.programIdIndex,this.accountKeys[e.programIdIndex])))}get version(){return"legacy"}get staticAccountKeys(){return this.accountKeys}get compiledInstructions(){return this.instructions.map((e=>({programIdIndex:e.programIdIndex,accountKeyIndexes:e.accounts,data:c().decode(e.data)})))}get addressTableLookups(){return[]}getAccountKeys(){return new H(this.staticAccountKeys)}static compile(e){const t=X.compile(e.instructions,e.payerKey),[r,n]=t.getMessageComponents(),i=new H(n).compileInstructions(e.instructions).map((e=>({programIdIndex:e.programIdIndex,accounts:e.accountKeyIndexes,data:c().encode(e.data)})));return new ee({header:r,accountKeys:n,recentBlockhash:e.recentBlockhash,instructions:i})}isAccountSigner(e){return e<this.header.numRequiredSignatures}isAccountWritable(e){const t=this.header.numRequiredSignatures;if(e>=this.header.numRequiredSignatures){return e-t<this.accountKeys.length-t-this.header.numReadonlyUnsignedAccounts}return e<t-this.header.numReadonlySignedAccounts}isProgramId(e){return this.indexToProgramIds.has(e)}programIds(){return[...this.indexToProgramIds.values()]}nonProgramIds(){return this.accountKeys.filter(((e,t)=>!this.isProgramId(t)))}serialize(){const e=this.accountKeys.length;let t=[];J(t,e);const r=this.instructions.map((e=>{const{accounts:t,programIdIndex:r}=e,i=Array.from(c().decode(e.data));let s=[];J(s,t.length);let o=[];return J(o,i.length),{programIdIndex:r,keyIndicesCount:n.Buffer.from(s),keyIndices:t,dataLength:n.Buffer.from(o),data:i}}));let i=[];J(i,r.length);let s=n.Buffer.alloc(L);n.Buffer.from(i).copy(s);let o=i.length;r.forEach((e=>{const t=d.w3([d.u8("programIdIndex"),d.av(e.keyIndicesCount.length,"keyIndicesCount"),d.O6(d.u8("keyIndex"),e.keyIndices.length,"keyIndices"),d.av(e.dataLength.length,"dataLength"),d.O6(d.u8("userdatum"),e.data.length,"data")]).encode(e,s,o);o+=t})),s=s.slice(0,o);const a=d.w3([d.av(1,"numRequiredSignatures"),d.av(1,"numReadonlySignedAccounts"),d.av(1,"numReadonlyUnsignedAccounts"),d.av(t.length,"keyCount"),d.O6(j("key"),e,"keys"),j("recentBlockhash")]),u={numRequiredSignatures:n.Buffer.from([this.header.numRequiredSignatures]),numReadonlySignedAccounts:n.Buffer.from([this.header.numReadonlySignedAccounts]),numReadonlyUnsignedAccounts:n.Buffer.from([this.header.numReadonlyUnsignedAccounts]),keyCount:n.Buffer.from(t),keys:this.accountKeys.map((e=>_(e.toBytes()))),recentBlockhash:c().decode(this.recentBlockhash)};let l=n.Buffer.alloc(2048);const h=a.encode(u,l);return s.copy(l,h),l.slice(0,h+s.length)}static from(e){let t=[...e];const r=Q(t);if(r!==(r&K))throw new Error("Versioned messages must be deserialized with VersionedMessage.deserialize()");const i=Q(t),s=Q(t),o=F(t);let a=[];for(let c=0;c<o;c++){const e=$(t,0,O);a.push(new R(n.Buffer.from(e)))}const u=$(t,0,O),l=F(t);let d=[];for(let g=0;g<l;g++){const e=Q(t),r=$(t,0,F(t)),i=$(t,0,F(t)),s=c().encode(n.Buffer.from(i));d.push({programIdIndex:e,accounts:r,data:s})}const h={header:{numRequiredSignatures:r,numReadonlySignedAccounts:i,numReadonlyUnsignedAccounts:s},recentBlockhash:c().encode(n.Buffer.from(u)),accountKeys:a,instructions:d};return new ee(h)}}class te{constructor(e){this.header=void 0,this.staticAccountKeys=void 0,this.recentBlockhash=void 0,this.compiledInstructions=void 0,this.addressTableLookups=void 0,this.header=e.header,this.staticAccountKeys=e.staticAccountKeys,this.recentBlockhash=e.recentBlockhash,this.compiledInstructions=e.compiledInstructions,this.addressTableLookups=e.addressTableLookups}get version(){return 0}get numAccountKeysFromLookups(){let e=0;for(const t of this.addressTableLookups)e+=t.readonlyIndexes.length+t.writableIndexes.length;return e}getAccountKeys(e){let t;if(e&&"accountKeysFromLookups"in e&&e.accountKeysFromLookups){if(this.numAccountKeysFromLookups!=e.accountKeysFromLookups.writable.length+e.accountKeysFromLookups.readonly.length)throw new Error("Failed to get account keys because of a mismatch in the number of account keys from lookups");t=e.accountKeysFromLookups}else if(e&&"addressLookupTableAccounts"in e&&e.addressLookupTableAccounts)t=this.resolveAddressTableLookups(e.addressLookupTableAccounts);else if(this.addressTableLookups.length>0)throw new Error("Failed to get account keys because address table lookups were not resolved");return new H(this.staticAccountKeys,t)}isAccountSigner(e){return e<this.header.numRequiredSignatures}isAccountWritable(e){const t=this.header.numRequiredSignatures,r=this.staticAccountKeys.length;if(e>=r){return e-r<this.addressTableLookups.reduce(((e,t)=>e+t.writableIndexes.length),0)}if(e>=this.header.numRequiredSignatures){return e-t<r-t-this.header.numReadonlyUnsignedAccounts}return e<t-this.header.numReadonlySignedAccounts}resolveAddressTableLookups(e){const t={writable:[],readonly:[]};for(const r of this.addressTableLookups){const n=e.find((e=>e.key.equals(r.accountKey)));if(!n)throw new Error("Failed to find address lookup table account for table key ".concat(r.accountKey.toBase58()));for(const e of r.writableIndexes){if(!(e<n.state.addresses.length))throw new Error("Failed to find address for index ".concat(e," in address lookup table ").concat(r.accountKey.toBase58()));t.writable.push(n.state.addresses[e])}for(const e of r.readonlyIndexes){if(!(e<n.state.addresses.length))throw new Error("Failed to find address for index ".concat(e," in address lookup table ").concat(r.accountKey.toBase58()));t.readonly.push(n.state.addresses[e])}}return t}static compile(e){const t=X.compile(e.instructions,e.payerKey),r=new Array,n={writable:new Array,readonly:new Array},i=e.addressLookupTableAccounts||[];for(const c of i){const e=t.extractTableLookup(c);if(void 0!==e){const[t,{writable:i,readonly:s}]=e;r.push(t),n.writable.push(...i),n.readonly.push(...s)}}const[s,o]=t.getMessageComponents(),a=new H(o,n).compileInstructions(e.instructions);return new te({header:s,staticAccountKeys:o,recentBlockhash:e.recentBlockhash,compiledInstructions:a,addressTableLookups:r})}serialize(){const e=Array();J(e,this.staticAccountKeys.length);const t=this.serializeInstructions(),r=Array();J(r,this.compiledInstructions.length);const n=this.serializeAddressTableLookups(),i=Array();J(i,this.addressTableLookups.length);const s=d.w3([d.u8("prefix"),d.w3([d.u8("numRequiredSignatures"),d.u8("numReadonlySignedAccounts"),d.u8("numReadonlyUnsignedAccounts")],"header"),d.av(e.length,"staticAccountKeysLength"),d.O6(j(),this.staticAccountKeys.length,"staticAccountKeys"),j("recentBlockhash"),d.av(r.length,"instructionsLength"),d.av(t.length,"serializedInstructions"),d.av(i.length,"addressTableLookupsLength"),d.av(n.length,"serializedAddressTableLookups")]),o=new Uint8Array(L),a=s.encode({prefix:128,header:this.header,staticAccountKeysLength:new Uint8Array(e),staticAccountKeys:this.staticAccountKeys.map((e=>e.toBytes())),recentBlockhash:c().decode(this.recentBlockhash),instructionsLength:new Uint8Array(r),serializedInstructions:t,addressTableLookupsLength:new Uint8Array(i),serializedAddressTableLookups:n},o);return o.slice(0,a)}serializeInstructions(){let e=0;const t=new Uint8Array(L);for(const r of this.compiledInstructions){const n=Array();J(n,r.accountKeyIndexes.length);const i=Array();J(i,r.data.length);e+=d.w3([d.u8("programIdIndex"),d.av(n.length,"encodedAccountKeyIndexesLength"),d.O6(d.u8(),r.accountKeyIndexes.length,"accountKeyIndexes"),d.av(i.length,"encodedDataLength"),d.av(r.data.length,"data")]).encode({programIdIndex:r.programIdIndex,encodedAccountKeyIndexesLength:new Uint8Array(n),accountKeyIndexes:r.accountKeyIndexes,encodedDataLength:new Uint8Array(i),data:r.data},t,e)}return t.slice(0,e)}serializeAddressTableLookups(){let e=0;const t=new Uint8Array(L);for(const r of this.addressTableLookups){const n=Array();J(n,r.writableIndexes.length);const i=Array();J(i,r.readonlyIndexes.length);e+=d.w3([j("accountKey"),d.av(n.length,"encodedWritableIndexesLength"),d.O6(d.u8(),r.writableIndexes.length,"writableIndexes"),d.av(i.length,"encodedReadonlyIndexesLength"),d.O6(d.u8(),r.readonlyIndexes.length,"readonlyIndexes")]).encode({accountKey:r.accountKey.toBytes(),encodedWritableIndexesLength:new Uint8Array(n),writableIndexes:r.writableIndexes,encodedReadonlyIndexesLength:new Uint8Array(i),readonlyIndexes:r.readonlyIndexes},t,e)}return t.slice(0,e)}static deserialize(e){let t=[...e];const r=Q(t),n=r&K;G(r!==n,"Expected versioned message but received legacy message");G(0===n,"Expected versioned message with version 0 but found version ".concat(n));const i={numRequiredSignatures:Q(t),numReadonlySignedAccounts:Q(t),numReadonlyUnsignedAccounts:Q(t)},s=[],o=F(t);for(let c=0;c<o;c++)s.push(new R($(t,0,O)));const a=c().encode($(t,0,O)),u=F(t),l=[];for(let c=0;c<u;c++){const e=Q(t),r=$(t,0,F(t)),n=F(t),i=new Uint8Array($(t,0,n));l.push({programIdIndex:e,accountKeyIndexes:r,data:i})}const d=F(t),h=[];for(let c=0;c<d;c++){const e=new R($(t,0,O)),r=$(t,0,F(t)),n=$(t,0,F(t));h.push({accountKey:e,writableIndexes:r,readonlyIndexes:n})}return new te({header:i,staticAccountKeys:s,recentBlockhash:a,compiledInstructions:l,addressTableLookups:h})}}const re={deserializeMessageVersion(e){const t=e[0],r=t&K;return r===t?"legacy":r},deserialize:e=>{const t=re.deserializeMessageVersion(e);if("legacy"===t)return ee.from(e);if(0===t)return te.deserialize(e);throw new Error("Transaction message version ".concat(t," deserialization is not supported"))}};let ne=function(e){return e[e.BLOCKHEIGHT_EXCEEDED=0]="BLOCKHEIGHT_EXCEEDED",e[e.PROCESSED=1]="PROCESSED",e[e.TIMED_OUT=2]="TIMED_OUT",e[e.NONCE_INVALID=3]="NONCE_INVALID",e}({});const ie=n.Buffer.alloc(z).fill(0);class se{constructor(e){this.keys=void 0,this.programId=void 0,this.data=n.Buffer.alloc(0),this.programId=e.programId,this.keys=e.keys,e.data&&(this.data=e.data)}toJSON(){return{keys:this.keys.map((e=>{let{pubkey:t,isSigner:r,isWritable:n}=e;return{pubkey:t.toJSON(),isSigner:r,isWritable:n}})),programId:this.programId.toJSON(),data:[...this.data]}}}class oe{get signature(){return this.signatures.length>0?this.signatures[0].signature:null}constructor(e){if(this.signatures=[],this.feePayer=void 0,this.instructions=[],this.recentBlockhash=void 0,this.lastValidBlockHeight=void 0,this.nonceInfo=void 0,this.minNonceContextSlot=void 0,this._message=void 0,this._json=void 0,e)if(e.feePayer&&(this.feePayer=e.feePayer),e.signatures&&(this.signatures=e.signatures),Object.prototype.hasOwnProperty.call(e,"nonceInfo")){const{minContextSlot:t,nonceInfo:r}=e;this.minNonceContextSlot=t,this.nonceInfo=r}else if(Object.prototype.hasOwnProperty.call(e,"lastValidBlockHeight")){const{blockhash:t,lastValidBlockHeight:r}=e;this.recentBlockhash=t,this.lastValidBlockHeight=r}else{const{recentBlockhash:t,nonceInfo:r}=e;r&&(this.nonceInfo=r),this.recentBlockhash=t}}toJSON(){return{recentBlockhash:this.recentBlockhash||null,feePayer:this.feePayer?this.feePayer.toJSON():null,nonceInfo:this.nonceInfo?{nonce:this.nonceInfo.nonce,nonceInstruction:this.nonceInfo.nonceInstruction.toJSON()}:null,instructions:this.instructions.map((e=>e.toJSON())),signers:this.signatures.map((e=>{let{publicKey:t}=e;return t.toJSON()}))}}add(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];if(0===t.length)throw new Error("No instructions");return t.forEach((e=>{"instructions"in e?this.instructions=this.instructions.concat(e.instructions):"data"in e&&"programId"in e&&"keys"in e?this.instructions.push(e):this.instructions.push(new se(e))})),this}compileMessage(){if(this._message&&JSON.stringify(this.toJSON())===JSON.stringify(this._json))return this._message;let e,t,r;if(this.nonceInfo?(e=this.nonceInfo.nonce,t=this.instructions[0]!=this.nonceInfo.nonceInstruction?[this.nonceInfo.nonceInstruction,...this.instructions]:this.instructions):(e=this.recentBlockhash,t=this.instructions),!e)throw new Error("Transaction recentBlockhash required");if(t.length<1&&console.warn("No instructions provided"),this.feePayer)r=this.feePayer;else{if(!(this.signatures.length>0&&this.signatures[0].publicKey))throw new Error("Transaction fee payer required");r=this.signatures[0].publicKey}for(let c=0;c<t.length;c++)if(void 0===t[c].programId)throw new Error("Transaction instruction index ".concat(c," has undefined program id"));const n=[],i=[];t.forEach((e=>{e.keys.forEach((e=>{i.push({...e})}));const t=e.programId.toString();n.includes(t)||n.push(t)})),n.forEach((e=>{i.push({pubkey:new R(e),isSigner:!1,isWritable:!1})}));const s=[];i.forEach((e=>{const t=e.pubkey.toString(),r=s.findIndex((e=>e.pubkey.toString()===t));r>-1?(s[r].isWritable=s[r].isWritable||e.isWritable,s[r].isSigner=s[r].isSigner||e.isSigner):s.push(e)})),s.sort((function(e,t){if(e.isSigner!==t.isSigner)return e.isSigner?-1:1;if(e.isWritable!==t.isWritable)return e.isWritable?-1:1;return e.pubkey.toBase58().localeCompare(t.pubkey.toBase58(),"en",{localeMatcher:"best fit",usage:"sort",sensitivity:"variant",ignorePunctuation:!1,numeric:!1,caseFirst:"lower"})}));const o=s.findIndex((e=>e.pubkey.equals(r)));if(o>-1){const[e]=s.splice(o,1);e.isSigner=!0,e.isWritable=!0,s.unshift(e)}else s.unshift({pubkey:r,isSigner:!0,isWritable:!0});for(const c of this.signatures){const e=s.findIndex((e=>e.pubkey.equals(c.publicKey)));if(!(e>-1))throw new Error("unknown signer: ".concat(c.publicKey.toString()));s[e].isSigner||(s[e].isSigner=!0,console.warn("Transaction references a signature that is unnecessary, only the fee payer and instruction signer accounts should sign a transaction. This behavior is deprecated and will throw an error in the next major version release."))}let a=0,u=0,l=0;const d=[],h=[];s.forEach((e=>{let{pubkey:t,isSigner:r,isWritable:n}=e;r?(d.push(t.toString()),a+=1,n||(u+=1)):(h.push(t.toString()),n||(l+=1))}));const g=d.concat(h),p=t.map((e=>{const{data:t,programId:r}=e;return{programIdIndex:g.indexOf(r.toString()),accounts:e.keys.map((e=>g.indexOf(e.pubkey.toString()))),data:c().encode(t)}}));return p.forEach((e=>{G(e.programIdIndex>=0),e.accounts.forEach((e=>G(e>=0)))})),new ee({header:{numRequiredSignatures:a,numReadonlySignedAccounts:u,numReadonlyUnsignedAccounts:l},accountKeys:g,recentBlockhash:e,instructions:p})}_compile(){const e=this.compileMessage(),t=e.accountKeys.slice(0,e.header.numRequiredSignatures);if(this.signatures.length===t.length){if(this.signatures.every(((e,r)=>t[r].equals(e.publicKey))))return e}return this.signatures=t.map((e=>({signature:null,publicKey:e}))),e}serializeMessage(){return this._compile().serialize()}async getEstimatedFee(e){return(await e.getFeeForMessage(this.compileMessage())).value}setSigners(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];if(0===t.length)throw new Error("No signers");const n=new Set;this.signatures=t.filter((e=>{const t=e.toString();return!n.has(t)&&(n.add(t),!0)})).map((e=>({signature:null,publicKey:e})))}sign(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];if(0===t.length)throw new Error("No signers");const n=new Set,i=[];for(const o of t){const e=o.publicKey.toString();n.has(e)||(n.add(e),i.push(o))}this.signatures=i.map((e=>({signature:null,publicKey:e.publicKey})));const s=this._compile();this._partialSign(s,...i)}partialSign(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];if(0===t.length)throw new Error("No signers");const n=new Set,i=[];for(const o of t){const e=o.publicKey.toString();n.has(e)||(n.add(e),i.push(o))}const s=this._compile();this._partialSign(s,...i)}_partialSign(e){const t=e.serialize();for(var r=arguments.length,n=new Array(r>1?r-1:0),i=1;i<r;i++)n[i-1]=arguments[i];n.forEach((e=>{const r=v(t,e.secretKey);this._addSignature(e.publicKey,_(r))}))}addSignature(e,t){this._compile(),this._addSignature(e,t)}_addSignature(e,t){G(64===t.length);const r=this.signatures.findIndex((t=>e.equals(t.publicKey)));if(r<0)throw new Error("unknown signer: ".concat(e.toString()));this.signatures[r].signature=n.Buffer.from(t)}verifySignatures(){let e=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];return!this._getMessageSignednessErrors(this.serializeMessage(),e)}_getMessageSignednessErrors(e,t){const r={};for(const{signature:n,publicKey:i}of this.signatures)null===n?t&&(r.missing||(r.missing=[])).push(i):A(n,e,i.toBytes())||(r.invalid||(r.invalid=[])).push(i);return r.invalid||r.missing?r:void 0}serialize(e){const{requireAllSignatures:t,verifySignatures:r}=Object.assign({requireAllSignatures:!0,verifySignatures:!0},e),n=this.serializeMessage();if(r){const e=this._getMessageSignednessErrors(n,t);if(e){let t="Signature verification failed.";throw e.invalid&&(t+="\nInvalid signature for public key".concat(1===e.invalid.length?"":"(s)"," [`").concat(e.invalid.map((e=>e.toBase58())).join("`, `"),"`].")),e.missing&&(t+="\nMissing signature for public key".concat(1===e.missing.length?"":"(s)"," [`").concat(e.missing.map((e=>e.toBase58())).join("`, `"),"`].")),new Error(t)}}return this._serialize(n)}_serialize(e){const{signatures:t}=this,r=[];J(r,t.length);const i=r.length+64*t.length+e.length,s=n.Buffer.alloc(i);return G(t.length<256),n.Buffer.from(r).copy(s,0),t.forEach(((e,t)=>{let{signature:i}=e;null!==i&&(G(64===i.length,"signature has invalid length"),n.Buffer.from(i).copy(s,r.length+64*t))})),e.copy(s,r.length+64*t.length),G(s.length<=L,"Transaction too large: ".concat(s.length," > ").concat(L)),s}get keys(){return G(1===this.instructions.length),this.instructions[0].keys.map((e=>e.pubkey))}get programId(){return G(1===this.instructions.length),this.instructions[0].programId}get data(){return G(1===this.instructions.length),this.instructions[0].data}static from(e){let t=[...e];const r=F(t);let i=[];for(let s=0;s<r;s++){const e=$(t,0,z);i.push(c().encode(n.Buffer.from(e)))}return oe.populate(ee.from(t),i)}static populate(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[];const r=new oe;return r.recentBlockhash=e.recentBlockhash,e.header.numRequiredSignatures>0&&(r.feePayer=e.accountKeys[0]),t.forEach(((t,n)=>{const i={signature:t==c().encode(ie)?null:c().decode(t),publicKey:e.accountKeys[n]};r.signatures.push(i)})),e.instructions.forEach((t=>{const n=t.accounts.map((t=>{const n=e.accountKeys[t];return{pubkey:n,isSigner:r.signatures.some((e=>e.publicKey.toString()===n.toString()))||e.isAccountSigner(t),isWritable:e.isAccountWritable(t)}}));r.instructions.push(new se({keys:n,programId:e.accountKeys[t.programIdIndex],data:c().decode(t.data)}))})),r._message=e,r._json=r.toJSON(),r}}class ae{constructor(e){this.payerKey=void 0,this.instructions=void 0,this.recentBlockhash=void 0,this.payerKey=e.payerKey,this.instructions=e.instructions,this.recentBlockhash=e.recentBlockhash}static decompile(e,t){const{header:r,compiledInstructions:n,recentBlockhash:i}=e,{numRequiredSignatures:s,numReadonlySignedAccounts:o,numReadonlyUnsignedAccounts:a}=r,c=s-o;G(c>0,"Message header is invalid");const u=e.staticAccountKeys.length-s-a;G(u>=0,"Message header is invalid");const l=e.getAccountKeys(t),d=l.get(0);if(void 0===d)throw new Error("Failed to decompile message because no account keys were found");const h=[];for(const g of n){const e=[];for(const n of g.accountKeyIndexes){const t=l.get(n);if(void 0===t)throw new Error("Failed to find key for account key index ".concat(n));let i;i=n<s?n<c:n<l.staticAccountKeys.length?n-s<u:n-l.staticAccountKeys.length<l.accountKeysFromLookups.writable.length,e.push({pubkey:t,isSigner:n<r.numRequiredSignatures,isWritable:i})}const t=l.get(g.programIdIndex);if(void 0===t)throw new Error("Failed to find program id for program id index ".concat(g.programIdIndex));h.push(new se({programId:t,data:_(g.data),keys:e}))}return new ae({payerKey:d,instructions:h,recentBlockhash:i})}compileToLegacyMessage(){return ee.compile({payerKey:this.payerKey,recentBlockhash:this.recentBlockhash,instructions:this.instructions})}compileToV0Message(e){return te.compile({payerKey:this.payerKey,recentBlockhash:this.recentBlockhash,instructions:this.instructions,addressLookupTableAccounts:e})}}class ce{get version(){return this.message.version}constructor(e,t){if(this.signatures=void 0,this.message=void 0,void 0!==t)G(t.length===e.header.numRequiredSignatures,"Expected signatures length to be equal to the number of required signatures"),this.signatures=t;else{const t=[];for(let r=0;r<e.header.numRequiredSignatures;r++)t.push(new Uint8Array(z));this.signatures=t}this.message=e}serialize(){const e=this.message.serialize(),t=Array();J(t,this.signatures.length);const r=d.w3([d.av(t.length,"encodedSignaturesLength"),d.O6(M(),this.signatures.length,"signatures"),d.av(e.length,"serializedMessage")]),n=new Uint8Array(2048),i=r.encode({encodedSignaturesLength:new Uint8Array(t),signatures:this.signatures,serializedMessage:e},n);return n.slice(0,i)}static deserialize(e){let t=[...e];const r=[],n=F(t);for(let s=0;s<n;s++)r.push(new Uint8Array($(t,0,z)));const i=re.deserialize(new Uint8Array(t));return new ce(i,r)}sign(e){const t=this.message.serialize(),r=this.message.staticAccountKeys.slice(0,this.message.header.numRequiredSignatures);for(const n of e){const e=r.findIndex((e=>e.equals(n.publicKey)));G(e>=0,"Cannot sign with non signer key ".concat(n.publicKey.toBase58())),this.signatures[e]=v(t,n.secretKey)}}addSignature(e,t){G(64===t.byteLength,"Signature must be 64 bytes long");const r=this.message.staticAccountKeys.slice(0,this.message.header.numRequiredSignatures).findIndex((t=>t.equals(e)));G(r>=0,"Can not add signature; `".concat(e.toBase58(),"` is not required to sign this transaction")),this.signatures[r]=t}}const ue=new R("SysvarC1ock11111111111111111111111111111111"),le=new R("SysvarEpochSchedu1e111111111111111111111111"),de=new R("Sysvar1nstructions1111111111111111111111111"),he=new R("SysvarRecentB1ockHashes11111111111111111111"),ge=new R("SysvarRent111111111111111111111111111111111"),pe=new R("SysvarRewards111111111111111111111111111111"),me=new R("SysvarS1otHashes111111111111111111111111111"),ye=new R("SysvarS1otHistory11111111111111111111111111"),be=new R("SysvarStakeHistory1111111111111111111111111");class fe extends Error{constructor(e){let{action:t,signature:r,transactionMessage:n,logs:i}=e;const s=i?"Logs: \n".concat(JSON.stringify(i.slice(-10),null,2),". "):"",o="\nCatch the `SendTransactionError` and call `getLogs()` on it for full details.";let a;switch(t){case"send":a="Transaction ".concat(r," resulted in an error. \n")+"".concat(n,". ")+s+o;break;case"simulate":a="Simulation failed. \nMessage: ".concat(n,". \n")+s+o;break;default:a="Unknown action '".concat(t,"'")}super(a),this.signature=void 0,this.transactionMessage=void 0,this.transactionLogs=void 0,this.signature=r,this.transactionMessage=n,this.transactionLogs=i||void 0}get transactionError(){return{message:this.transactionMessage,logs:Array.isArray(this.transactionLogs)?this.transactionLogs:void 0}}get logs(){const e=this.transactionLogs;if(null==e||"object"!==typeof e||!("then"in e))return e}async getLogs(e){return Array.isArray(this.transactionLogs)||(this.transactionLogs=new Promise(((t,r)=>{e.getTransaction(this.signature).then((e=>{if(e&&e.meta&&e.meta.logMessages){const r=e.meta.logMessages;this.transactionLogs=r,t(r)}else r(new Error("Log messages not found"))})).catch(r)}))),await this.transactionLogs}}const ke={JSON_RPC_SERVER_ERROR_BLOCK_CLEANED_UP:-32001,JSON_RPC_SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE:-32002,JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_VERIFICATION_FAILURE:-32003,JSON_RPC_SERVER_ERROR_BLOCK_NOT_AVAILABLE:-32004,JSON_RPC_SERVER_ERROR_NODE_UNHEALTHY:-32005,JSON_RPC_SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE:-32006,JSON_RPC_SERVER_ERROR_SLOT_SKIPPED:-32007,JSON_RPC_SERVER_ERROR_NO_SNAPSHOT:-32008,JSON_RPC_SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED:-32009,JSON_RPC_SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX:-32010,JSON_RPC_SERVER_ERROR_TRANSACTION_HISTORY_NOT_AVAILABLE:-32011,JSON_RPC_SCAN_ERROR:-32012,JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_LEN_MISMATCH:-32013,JSON_RPC_SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET:-32014,JSON_RPC_SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION:-32015,JSON_RPC_SERVER_ERROR_MIN_CONTEXT_SLOT_NOT_REACHED:-32016};class we extends Error{constructor(e,t){let{code:r,message:n,data:i}=e;super(null!=t?"".concat(t,": ").concat(n):n),this.code=void 0,this.data=void 0,this.code=r,this.data=i,this.name="SolanaJSONRPCError"}}async function Se(e,t,r,n){const i=n&&{skipPreflight:n.skipPreflight,preflightCommitment:n.preflightCommitment||n.commitment,maxRetries:n.maxRetries,minContextSlot:n.minContextSlot},s=await e.sendTransaction(t,r,i);let o;if(null!=t.recentBlockhash&&null!=t.lastValidBlockHeight)o=(await e.confirmTransaction({abortSignal:null===n||void 0===n?void 0:n.abortSignal,signature:s,blockhash:t.recentBlockhash,lastValidBlockHeight:t.lastValidBlockHeight},n&&n.commitment)).value;else if(null!=t.minNonceContextSlot&&null!=t.nonceInfo){const{nonceInstruction:r}=t.nonceInfo,i=r.keys[0].pubkey;o=(await e.confirmTransaction({abortSignal:null===n||void 0===n?void 0:n.abortSignal,minContextSlot:t.minNonceContextSlot,nonceAccountPubkey:i,nonceValue:t.nonceInfo.nonce,signature:s},n&&n.commitment)).value}else null!=(null===n||void 0===n?void 0:n.abortSignal)&&console.warn("sendAndConfirmTransaction(): A transaction with a deprecated confirmation strategy was supplied along with an `abortSignal`. Only transactions having `lastValidBlockHeight` or a combination of `nonceInfo` and `minNonceContextSlot` are abortable."),o=(await e.confirmTransaction(s,n&&n.commitment)).value;if(o.err){if(null!=s)throw new fe({action:"send",signature:s,transactionMessage:"Status: (".concat(JSON.stringify(o),")")});throw new Error("Transaction ".concat(s," failed (").concat(JSON.stringify(o),")"))}return s}function Ie(e){return new Promise((t=>setTimeout(t,e)))}function ve(e,t){const r=e.layout.span>=0?e.layout.span:V(e,t),i=n.Buffer.alloc(r),s=Object.assign({instruction:e.index},t);return e.layout.encode(s,i),i}function Ae(e,t){let r;try{r=e.layout.decode(t)}catch(n){throw new Error("invalid instruction; "+n)}if(r.instruction!==e.index)throw new Error("invalid instruction; instruction index mismatch ".concat(r.instruction," != ").concat(e.index));return r}const _e=d.I0("lamportsPerSignature"),Pe=d.w3([d.DH("version"),d.DH("state"),j("authorizedPubkey"),j("nonce"),d.w3([_e],"feeCalculator")]),Ee=Pe.span;class Be{constructor(e){this.authorizedPubkey=void 0,this.nonce=void 0,this.feeCalculator=void 0,this.authorizedPubkey=e.authorizedPubkey,this.nonce=e.nonce,this.feeCalculator=e.feeCalculator}static fromAccountData(e){const t=Pe.decode(_(e),0);return new Be({authorizedPubkey:new R(t.authorizedPubkey),nonce:new R(t.nonce).toString(),feeCalculator:t.feeCalculator})}}const We=(Te=8,e=>{const t=(0,d.av)(Te,e),{encode:r,decode:i}=(e=>({decode:e.decode.bind(e),encode:e.encode.bind(e)}))(t),s=t;return s.decode=(e,t)=>{const r=i(e,t);return(0,h.k5)(n.Buffer.from(r))},s.encode=(e,t,n)=>{const i=(0,h.Bq)(e,Te);return r(i,t,n)},s});var Te;class Oe{constructor(){}static decodeInstructionType(e){this.checkProgramId(e.programId);const t=d.DH("instruction").decode(e.data);let r;for(const[n,i]of Object.entries(Ne))if(i.index==t){r=n;break}if(!r)throw new Error("Instruction type incorrect; not a SystemInstruction");return r}static decodeCreateAccount(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,2);const{lamports:t,space:r,programId:n}=Ae(Ne.Create,e.data);return{fromPubkey:e.keys[0].pubkey,newAccountPubkey:e.keys[1].pubkey,lamports:t,space:r,programId:new R(n)}}static decodeTransfer(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,2);const{lamports:t}=Ae(Ne.Transfer,e.data);return{fromPubkey:e.keys[0].pubkey,toPubkey:e.keys[1].pubkey,lamports:t}}static decodeTransferWithSeed(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,3);const{lamports:t,seed:r,programId:n}=Ae(Ne.TransferWithSeed,e.data);return{fromPubkey:e.keys[0].pubkey,basePubkey:e.keys[1].pubkey,toPubkey:e.keys[2].pubkey,lamports:t,seed:r,programId:new R(n)}}static decodeAllocate(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,1);const{space:t}=Ae(Ne.Allocate,e.data);return{accountPubkey:e.keys[0].pubkey,space:t}}static decodeAllocateWithSeed(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,1);const{base:t,seed:r,space:n,programId:i}=Ae(Ne.AllocateWithSeed,e.data);return{accountPubkey:e.keys[0].pubkey,basePubkey:new R(t),seed:r,space:n,programId:new R(i)}}static decodeAssign(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,1);const{programId:t}=Ae(Ne.Assign,e.data);return{accountPubkey:e.keys[0].pubkey,programId:new R(t)}}static decodeAssignWithSeed(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,1);const{base:t,seed:r,programId:n}=Ae(Ne.AssignWithSeed,e.data);return{accountPubkey:e.keys[0].pubkey,basePubkey:new R(t),seed:r,programId:new R(n)}}static decodeCreateWithSeed(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,2);const{base:t,seed:r,lamports:n,space:i,programId:s}=Ae(Ne.CreateWithSeed,e.data);return{fromPubkey:e.keys[0].pubkey,newAccountPubkey:e.keys[1].pubkey,basePubkey:new R(t),seed:r,lamports:n,space:i,programId:new R(s)}}static decodeNonceInitialize(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,3);const{authorized:t}=Ae(Ne.InitializeNonceAccount,e.data);return{noncePubkey:e.keys[0].pubkey,authorizedPubkey:new R(t)}}static decodeNonceAdvance(e){return this.checkProgramId(e.programId),this.checkKeyLength(e.keys,3),Ae(Ne.AdvanceNonceAccount,e.data),{noncePubkey:e.keys[0].pubkey,authorizedPubkey:e.keys[2].pubkey}}static decodeNonceWithdraw(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,5);const{lamports:t}=Ae(Ne.WithdrawNonceAccount,e.data);return{noncePubkey:e.keys[0].pubkey,toPubkey:e.keys[1].pubkey,authorizedPubkey:e.keys[4].pubkey,lamports:t}}static decodeNonceAuthorize(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,2);const{authorized:t}=Ae(Ne.AuthorizeNonceAccount,e.data);return{noncePubkey:e.keys[0].pubkey,authorizedPubkey:e.keys[1].pubkey,newAuthorizedPubkey:new R(t)}}static checkProgramId(e){if(!e.equals(Re.programId))throw new Error("invalid instruction; programId is not SystemProgram")}static checkKeyLength(e,t){if(e.length<t)throw new Error("invalid instruction; found ".concat(e.length," keys, expected at least ").concat(t))}}const Ne=Object.freeze({Create:{index:0,layout:d.w3([d.DH("instruction"),d.Wg("lamports"),d.Wg("space"),j("programId")])},Assign:{index:1,layout:d.w3([d.DH("instruction"),j("programId")])},Transfer:{index:2,layout:d.w3([d.DH("instruction"),We("lamports")])},CreateWithSeed:{index:3,layout:d.w3([d.DH("instruction"),j("base"),U("seed"),d.Wg("lamports"),d.Wg("space"),j("programId")])},AdvanceNonceAccount:{index:4,layout:d.w3([d.DH("instruction")])},WithdrawNonceAccount:{index:5,layout:d.w3([d.DH("instruction"),d.Wg("lamports")])},InitializeNonceAccount:{index:6,layout:d.w3([d.DH("instruction"),j("authorized")])},AuthorizeNonceAccount:{index:7,layout:d.w3([d.DH("instruction"),j("authorized")])},Allocate:{index:8,layout:d.w3([d.DH("instruction"),d.Wg("space")])},AllocateWithSeed:{index:9,layout:d.w3([d.DH("instruction"),j("base"),U("seed"),d.Wg("space"),j("programId")])},AssignWithSeed:{index:10,layout:d.w3([d.DH("instruction"),j("base"),U("seed"),j("programId")])},TransferWithSeed:{index:11,layout:d.w3([d.DH("instruction"),We("lamports"),U("seed"),j("programId")])},UpgradeNonceAccount:{index:12,layout:d.w3([d.DH("instruction")])}});class Re{constructor(){}static createAccount(e){const t=ve(Ne.Create,{lamports:e.lamports,space:e.space,programId:_(e.programId.toBuffer())});return new se({keys:[{pubkey:e.fromPubkey,isSigner:!0,isWritable:!0},{pubkey:e.newAccountPubkey,isSigner:!0,isWritable:!0}],programId:this.programId,data:t})}static transfer(e){let t,r;if("basePubkey"in e){t=ve(Ne.TransferWithSeed,{lamports:BigInt(e.lamports),seed:e.seed,programId:_(e.programId.toBuffer())}),r=[{pubkey:e.fromPubkey,isSigner:!1,isWritable:!0},{pubkey:e.basePubkey,isSigner:!0,isWritable:!1},{pubkey:e.toPubkey,isSigner:!1,isWritable:!0}]}else{t=ve(Ne.Transfer,{lamports:BigInt(e.lamports)}),r=[{pubkey:e.fromPubkey,isSigner:!0,isWritable:!0},{pubkey:e.toPubkey,isSigner:!1,isWritable:!0}]}return new se({keys:r,programId:this.programId,data:t})}static assign(e){let t,r;if("basePubkey"in e){t=ve(Ne.AssignWithSeed,{base:_(e.basePubkey.toBuffer()),seed:e.seed,programId:_(e.programId.toBuffer())}),r=[{pubkey:e.accountPubkey,isSigner:!1,isWritable:!0},{pubkey:e.basePubkey,isSigner:!0,isWritable:!1}]}else{t=ve(Ne.Assign,{programId:_(e.programId.toBuffer())}),r=[{pubkey:e.accountPubkey,isSigner:!0,isWritable:!0}]}return new se({keys:r,programId:this.programId,data:t})}static createAccountWithSeed(e){const t=ve(Ne.CreateWithSeed,{base:_(e.basePubkey.toBuffer()),seed:e.seed,lamports:e.lamports,space:e.space,programId:_(e.programId.toBuffer())});let r=[{pubkey:e.fromPubkey,isSigner:!0,isWritable:!0},{pubkey:e.newAccountPubkey,isSigner:!1,isWritable:!0}];return e.basePubkey!=e.fromPubkey&&r.push({pubkey:e.basePubkey,isSigner:!0,isWritable:!1}),new se({keys:r,programId:this.programId,data:t})}static createNonceAccount(e){const t=new oe;"basePubkey"in e&&"seed"in e?t.add(Re.createAccountWithSeed({fromPubkey:e.fromPubkey,newAccountPubkey:e.noncePubkey,basePubkey:e.basePubkey,seed:e.seed,lamports:e.lamports,space:Ee,programId:this.programId})):t.add(Re.createAccount({fromPubkey:e.fromPubkey,newAccountPubkey:e.noncePubkey,lamports:e.lamports,space:Ee,programId:this.programId}));const r={noncePubkey:e.noncePubkey,authorizedPubkey:e.authorizedPubkey};return t.add(this.nonceInitialize(r)),t}static nonceInitialize(e){const t=ve(Ne.InitializeNonceAccount,{authorized:_(e.authorizedPubkey.toBuffer())}),r={keys:[{pubkey:e.noncePubkey,isSigner:!1,isWritable:!0},{pubkey:he,isSigner:!1,isWritable:!1},{pubkey:ge,isSigner:!1,isWritable:!1}],programId:this.programId,data:t};return new se(r)}static nonceAdvance(e){const t=ve(Ne.AdvanceNonceAccount),r={keys:[{pubkey:e.noncePubkey,isSigner:!1,isWritable:!0},{pubkey:he,isSigner:!1,isWritable:!1},{pubkey:e.authorizedPubkey,isSigner:!0,isWritable:!1}],programId:this.programId,data:t};return new se(r)}static nonceWithdraw(e){const t=ve(Ne.WithdrawNonceAccount,{lamports:e.lamports});return new se({keys:[{pubkey:e.noncePubkey,isSigner:!1,isWritable:!0},{pubkey:e.toPubkey,isSigner:!1,isWritable:!0},{pubkey:he,isSigner:!1,isWritable:!1},{pubkey:ge,isSigner:!1,isWritable:!1},{pubkey:e.authorizedPubkey,isSigner:!0,isWritable:!1}],programId:this.programId,data:t})}static nonceAuthorize(e){const t=ve(Ne.AuthorizeNonceAccount,{authorized:_(e.newAuthorizedPubkey.toBuffer())});return new se({keys:[{pubkey:e.noncePubkey,isSigner:!1,isWritable:!0},{pubkey:e.authorizedPubkey,isSigner:!0,isWritable:!1}],programId:this.programId,data:t})}static allocate(e){let t,r;if("basePubkey"in e){t=ve(Ne.AllocateWithSeed,{base:_(e.basePubkey.toBuffer()),seed:e.seed,space:e.space,programId:_(e.programId.toBuffer())}),r=[{pubkey:e.accountPubkey,isSigner:!1,isWritable:!0},{pubkey:e.basePubkey,isSigner:!0,isWritable:!1}]}else{t=ve(Ne.Allocate,{space:e.space}),r=[{pubkey:e.accountPubkey,isSigner:!0,isWritable:!0}]}return new se({keys:r,programId:this.programId,data:t})}}Re.programId=new R("11111111111111111111111111111111");const Ce=L-300;class xe{constructor(){}static getMinNumSignatures(e){return 2*(Math.ceil(e/xe.chunkSize)+1+1)}static async load(e,t,r,i,s){{const n=await e.getMinimumBalanceForRentExemption(s.length),o=await e.getAccountInfo(r.publicKey,"confirmed");let a=null;if(null!==o){if(o.executable)return console.error("Program load failed, account is already executable"),!1;o.data.length!==s.length&&(a=a||new oe,a.add(Re.allocate({accountPubkey:r.publicKey,space:s.length}))),o.owner.equals(i)||(a=a||new oe,a.add(Re.assign({accountPubkey:r.publicKey,programId:i}))),o.lamports<n&&(a=a||new oe,a.add(Re.transfer({fromPubkey:t.publicKey,toPubkey:r.publicKey,lamports:n-o.lamports})))}else a=(new oe).add(Re.createAccount({fromPubkey:t.publicKey,newAccountPubkey:r.publicKey,lamports:n>0?n:1,space:s.length,programId:i}));null!==a&&await Se(e,a,[t,r],{commitment:"confirmed"})}const o=d.w3([d.DH("instruction"),d.DH("offset"),d.DH("bytesLength"),d.DH("bytesLengthPadding"),d.O6(d.u8("byte"),d.cY(d.DH(),-8),"bytes")]),a=xe.chunkSize;let c=0,u=s,l=[];for(;u.length>0;){const s=u.slice(0,a),d=n.Buffer.alloc(a+16);o.encode({instruction:0,offset:c,bytes:s,bytesLength:0,bytesLengthPadding:0},d);const h=(new oe).add({keys:[{pubkey:r.publicKey,isSigner:!0,isWritable:!0}],programId:i,data:d});if(l.push(Se(e,h,[t,r],{commitment:"confirmed"})),e._rpcEndpoint.includes("solana.com")){const e=4;await Ie(1e3/e)}c+=a,u=u.slice(a)}await Promise.all(l);{const s=d.w3([d.DH("instruction")]),o=n.Buffer.alloc(s.span);s.encode({instruction:1},o);const a=(new oe).add({keys:[{pubkey:r.publicKey,isSigner:!0,isWritable:!0},{pubkey:ge,isSigner:!1,isWritable:!1}],programId:i,data:o}),c="processed",u=await e.sendTransaction(a,[t,r],{preflightCommitment:c}),{context:l,value:h}=await e.confirmTransaction({signature:u,lastValidBlockHeight:a.lastValidBlockHeight,blockhash:a.recentBlockhash},c);if(h.err)throw new Error("Transaction ".concat(u," failed (").concat(JSON.stringify(h),")"));for(;;){try{if(await e.getSlot({commitment:c})>l.slot)break}catch{}await new Promise((e=>setTimeout(e,Math.round(200))))}}return!0}}xe.chunkSize=Ce;const Le=new R("BPFLoader2111111111111111111111111111111111");class Ke{static getMinNumSignatures(e){return xe.getMinNumSignatures(e)}static load(e,t,r,n,i){return xe.load(e,t,r,i,n)}}function ze(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}var Ye=Object.prototype.toString,qe=Object.keys||function(e){var t=[];for(var r in e)t.push(r);return t};function De(e,t){var r,n,i,s,o,a,c;if(!0===e)return"true";if(!1===e)return"false";switch(typeof e){case"object":if(null===e)return null;if(e.toJSON&&"function"===typeof e.toJSON)return De(e.toJSON(),t);if("[object Array]"===(c=Ye.call(e))){for(i="[",n=e.length-1,r=0;r<n;r++)i+=De(e[r],!0)+",";return n>-1&&(i+=De(e[r],!0)),i+"]"}if("[object Object]"===c){for(n=(s=qe(e).sort()).length,i="",r=0;r<n;)void 0!==(a=De(e[o=s[r]],!1))&&(i&&(i+=","),i+=JSON.stringify(o)+":"+a),r++;return"{"+i+"}"}return JSON.stringify(e);case"function":case"undefined":return t?null:void 0;case"string":return JSON.stringify(e);default:return isFinite(e)?e:null}}var He=ze((function(e){var t=De(e,!1);if(void 0!==t)return""+t}));function je(e){let t=0;for(;e>1;)e/=2,t++;return t}class Me{constructor(e,t,r,n,i){this.slotsPerEpoch=void 0,this.leaderScheduleSlotOffset=void 0,this.warmup=void 0,this.firstNormalEpoch=void 0,this.firstNormalSlot=void 0,this.slotsPerEpoch=e,this.leaderScheduleSlotOffset=t,this.warmup=r,this.firstNormalEpoch=n,this.firstNormalSlot=i}getEpoch(e){return this.getEpochAndSlotIndex(e)[0]}getEpochAndSlotIndex(e){if(e<this.firstNormalSlot){const r=je(0===(t=e+32+1)?1:(t--,t|=t>>1,t|=t>>2,t|=t>>4,t|=t>>8,t|=t>>16,1+(t|=t>>32)))-je(32)-1;return[r,e-(this.getSlotsInEpoch(r)-32)]}{const t=e-this.firstNormalSlot,r=Math.floor(t/this.slotsPerEpoch);return[this.firstNormalEpoch+r,t%this.slotsPerEpoch]}var t}getFirstSlotInEpoch(e){return e<=this.firstNormalEpoch?32*(Math.pow(2,e)-1):(e-this.firstNormalEpoch)*this.slotsPerEpoch+this.firstNormalSlot}getLastSlotInEpoch(e){return this.getFirstSlotInEpoch(e)+this.getSlotsInEpoch(e)-1}getSlotsInEpoch(e){return e<this.firstNormalEpoch?Math.pow(2,e+je(32)):this.slotsPerEpoch}}var Ue=globalThis.fetch;class Ve extends y.vE{constructor(e,t,r){super((e=>{const r=(0,y.kb)(e,{autoconnect:!0,max_reconnects:5,reconnect:!0,reconnect_interval:1e3,...t});return this.underlyingSocket="socket"in r?r.socket:r,r}),e,t,r),this.underlyingSocket=void 0}call(){var e;const t=null===(e=this.underlyingSocket)||void 0===e?void 0:e.readyState;return 1===t?super.call(...arguments):Promise.reject(new Error("Tried to call a JSON-RPC method `"+(arguments.length<=0?void 0:arguments[0])+"` but the socket was not `CONNECTING` or `OPEN` (`readyState` was "+t+")"))}notify(){var e;const t=null===(e=this.underlyingSocket)||void 0===e?void 0:e.readyState;return 1===t?super.notify(...arguments):Promise.reject(new Error("Tried to send a JSON-RPC notification `"+(arguments.length<=0?void 0:arguments[0])+"` but the socket was not `CONNECTING` or `OPEN` (`readyState` was "+t+")"))}}class Fe{constructor(e){this.key=void 0,this.state=void 0,this.key=e.key,this.state=e.state}isActive(){const e=BigInt("0xffffffffffffffff");return this.state.deactivationSlot===e}static deserialize(e){const t=function(e,t){let r;try{r=e.layout.decode(t)}catch(n){throw new Error("invalid instruction; "+n)}if(r.typeIndex!==e.index)throw new Error("invalid account data; account type mismatch ".concat(r.typeIndex," != ").concat(e.index));return r}(Je,e),r=e.length-56;G(r>=0,"lookup table is invalid"),G(r%32===0,"lookup table is invalid");const n=r/32,{addresses:i}=d.w3([d.O6(j(),n,"addresses")]).decode(e.slice(56));return{deactivationSlot:t.deactivationSlot,lastExtendedSlot:t.lastExtendedSlot,lastExtendedSlotStartIndex:t.lastExtendedStartIndex,authority:0!==t.authority.length?new R(t.authority[0]):void 0,addresses:i.map((e=>new R(e)))}}}const Je={index:1,layout:d.w3([d.DH("typeIndex"),We("deactivationSlot"),d.I0("lastExtendedSlot"),d.u8("lastExtendedStartIndex"),d.u8(),d.O6(j(),d.cY(d.u8(),-1),"authority")])},Ge=/^[^:]+:\/\/([^:[]+|\[[^\]]+\])(:\d+)?(.*)/i;const Xe=(0,g.au)((0,g.KJ)(R),(0,g.Yj)(),(e=>new R(e))),Ze=(0,g.PV)([(0,g.Yj)(),(0,g.eu)("base64")]),Qe=(0,g.au)((0,g.KJ)(n.Buffer),Ze,(e=>n.Buffer.from(e[0],"base64"))),$e=3e4;function et(e){let t,r;if("string"===typeof e)t=e;else if(e){const{commitment:n,...i}=e;t=n,r=i}return{commitment:t,config:r}}function tt(e){return e.map((e=>{var t;return"memcmp"in e?{...e,memcmp:{...e.memcmp,encoding:null!==(t=e.memcmp.encoding)&&void 0!==t?t:"base58"}}:e}))}function rt(e){return(0,g.KC)([(0,g.NW)({jsonrpc:(0,g.eu)("2.0"),id:(0,g.Yj)(),result:e}),(0,g.NW)({jsonrpc:(0,g.eu)("2.0"),id:(0,g.Yj)(),error:(0,g.NW)({code:(0,g.L5)(),message:(0,g.Yj)(),data:(0,g.lq)((0,g.bz)())})})])}const nt=rt((0,g.L5)());function it(e){return(0,g.au)(rt(e),nt,(t=>"error"in t?t:{...t,result:(0,g.vt)(t.result,e)}))}function st(e){return it((0,g.NW)({context:(0,g.NW)({slot:(0,g.ai)()}),value:e}))}function ot(e){return(0,g.NW)({context:(0,g.NW)({slot:(0,g.ai)()}),value:e})}function at(e,t){return 0===e?new te({header:t.header,staticAccountKeys:t.accountKeys.map((e=>new R(e))),recentBlockhash:t.recentBlockhash,compiledInstructions:t.instructions.map((e=>({programIdIndex:e.programIdIndex,accountKeyIndexes:e.accounts,data:c().decode(e.data)}))),addressTableLookups:t.addressTableLookups}):new ee(t)}const ct=(0,g.NW)({foundation:(0,g.ai)(),foundationTerm:(0,g.ai)(),initial:(0,g.ai)(),taper:(0,g.ai)(),terminal:(0,g.ai)()}),ut=it((0,g.YO)((0,g.me)((0,g.NW)({epoch:(0,g.ai)(),effectiveSlot:(0,g.ai)(),amount:(0,g.ai)(),postBalance:(0,g.ai)(),commission:(0,g.lq)((0,g.me)((0,g.ai)()))})))),lt=(0,g.YO)((0,g.NW)({slot:(0,g.ai)(),prioritizationFee:(0,g.ai)()})),dt=(0,g.NW)({total:(0,g.ai)(),validator:(0,g.ai)(),foundation:(0,g.ai)(),epoch:(0,g.ai)()}),ht=(0,g.NW)({epoch:(0,g.ai)(),slotIndex:(0,g.ai)(),slotsInEpoch:(0,g.ai)(),absoluteSlot:(0,g.ai)(),blockHeight:(0,g.lq)((0,g.ai)()),transactionCount:(0,g.lq)((0,g.ai)())}),gt=(0,g.NW)({slotsPerEpoch:(0,g.ai)(),leaderScheduleSlotOffset:(0,g.ai)(),warmup:(0,g.zM)(),firstNormalEpoch:(0,g.ai)(),firstNormalSlot:(0,g.ai)()}),pt=(0,g.g1)((0,g.Yj)(),(0,g.YO)((0,g.ai)())),mt=(0,g.me)((0,g.KC)([(0,g.NW)({}),(0,g.Yj)()])),yt=(0,g.NW)({err:mt}),bt=(0,g.eu)("receivedSignature"),ft=(0,g.NW)({"solana-core":(0,g.Yj)(),"feature-set":(0,g.lq)((0,g.ai)())}),kt=(0,g.NW)({program:(0,g.Yj)(),programId:Xe,parsed:(0,g.L5)()}),wt=(0,g.NW)({programId:Xe,accounts:(0,g.YO)(Xe),data:(0,g.Yj)()}),St=st((0,g.NW)({err:(0,g.me)((0,g.KC)([(0,g.NW)({}),(0,g.Yj)()])),logs:(0,g.me)((0,g.YO)((0,g.Yj)())),accounts:(0,g.lq)((0,g.me)((0,g.YO)((0,g.me)((0,g.NW)({executable:(0,g.zM)(),owner:(0,g.Yj)(),lamports:(0,g.ai)(),data:(0,g.YO)((0,g.Yj)()),rentEpoch:(0,g.lq)((0,g.ai)())}))))),unitsConsumed:(0,g.lq)((0,g.ai)()),returnData:(0,g.lq)((0,g.me)((0,g.NW)({programId:(0,g.Yj)(),data:(0,g.PV)([(0,g.Yj)(),(0,g.eu)("base64")])}))),innerInstructions:(0,g.lq)((0,g.me)((0,g.YO)((0,g.NW)({index:(0,g.ai)(),instructions:(0,g.YO)((0,g.KC)([kt,wt]))}))))})),It=st((0,g.NW)({byIdentity:(0,g.g1)((0,g.Yj)(),(0,g.YO)((0,g.ai)())),range:(0,g.NW)({firstSlot:(0,g.ai)(),lastSlot:(0,g.ai)()})}));const vt=it(ct),At=it(dt),_t=it(lt),Pt=it(ht),Et=it(gt),Bt=it(pt),Wt=it((0,g.ai)()),Tt=st((0,g.NW)({total:(0,g.ai)(),circulating:(0,g.ai)(),nonCirculating:(0,g.ai)(),nonCirculatingAccounts:(0,g.YO)(Xe)})),Ot=(0,g.NW)({amount:(0,g.Yj)(),uiAmount:(0,g.me)((0,g.ai)()),decimals:(0,g.ai)(),uiAmountString:(0,g.lq)((0,g.Yj)())}),Nt=st((0,g.YO)((0,g.NW)({address:Xe,amount:(0,g.Yj)(),uiAmount:(0,g.me)((0,g.ai)()),decimals:(0,g.ai)(),uiAmountString:(0,g.lq)((0,g.Yj)())}))),Rt=st((0,g.YO)((0,g.NW)({pubkey:Xe,account:(0,g.NW)({executable:(0,g.zM)(),owner:Xe,lamports:(0,g.ai)(),data:Qe,rentEpoch:(0,g.ai)()})}))),Ct=(0,g.NW)({program:(0,g.Yj)(),parsed:(0,g.L5)(),space:(0,g.ai)()}),xt=st((0,g.YO)((0,g.NW)({pubkey:Xe,account:(0,g.NW)({executable:(0,g.zM)(),owner:Xe,lamports:(0,g.ai)(),data:Ct,rentEpoch:(0,g.ai)()})}))),Lt=st((0,g.YO)((0,g.NW)({lamports:(0,g.ai)(),address:Xe}))),Kt=(0,g.NW)({executable:(0,g.zM)(),owner:Xe,lamports:(0,g.ai)(),data:Qe,rentEpoch:(0,g.ai)()}),zt=(0,g.NW)({pubkey:Xe,account:Kt}),Yt=(0,g.au)((0,g.KC)([(0,g.KJ)(n.Buffer),Ct]),(0,g.KC)([Ze,Ct]),(e=>Array.isArray(e)?(0,g.vt)(e,Qe):e)),qt=(0,g.NW)({executable:(0,g.zM)(),owner:Xe,lamports:(0,g.ai)(),data:Yt,rentEpoch:(0,g.ai)()}),Dt=(0,g.NW)({pubkey:Xe,account:qt}),Ht=(0,g.NW)({state:(0,g.KC)([(0,g.eu)("active"),(0,g.eu)("inactive"),(0,g.eu)("activating"),(0,g.eu)("deactivating")]),active:(0,g.ai)(),inactive:(0,g.ai)()}),jt=it((0,g.YO)((0,g.NW)({signature:(0,g.Yj)(),slot:(0,g.ai)(),err:mt,memo:(0,g.me)((0,g.Yj)()),blockTime:(0,g.lq)((0,g.me)((0,g.ai)()))}))),Mt=it((0,g.YO)((0,g.NW)({signature:(0,g.Yj)(),slot:(0,g.ai)(),err:mt,memo:(0,g.me)((0,g.Yj)()),blockTime:(0,g.lq)((0,g.me)((0,g.ai)()))}))),Ut=(0,g.NW)({subscription:(0,g.ai)(),result:ot(Kt)}),Vt=(0,g.NW)({pubkey:Xe,account:Kt}),Ft=(0,g.NW)({subscription:(0,g.ai)(),result:ot(Vt)}),Jt=(0,g.NW)({parent:(0,g.ai)(),slot:(0,g.ai)(),root:(0,g.ai)()}),Gt=(0,g.NW)({subscription:(0,g.ai)(),result:Jt}),Xt=(0,g.KC)([(0,g.NW)({type:(0,g.KC)([(0,g.eu)("firstShredReceived"),(0,g.eu)("completed"),(0,g.eu)("optimisticConfirmation"),(0,g.eu)("root")]),slot:(0,g.ai)(),timestamp:(0,g.ai)()}),(0,g.NW)({type:(0,g.eu)("createdBank"),parent:(0,g.ai)(),slot:(0,g.ai)(),timestamp:(0,g.ai)()}),(0,g.NW)({type:(0,g.eu)("frozen"),slot:(0,g.ai)(),timestamp:(0,g.ai)(),stats:(0,g.NW)({numTransactionEntries:(0,g.ai)(),numSuccessfulTransactions:(0,g.ai)(),numFailedTransactions:(0,g.ai)(),maxTransactionsPerEntry:(0,g.ai)()})}),(0,g.NW)({type:(0,g.eu)("dead"),slot:(0,g.ai)(),timestamp:(0,g.ai)(),err:(0,g.Yj)()})]),Zt=(0,g.NW)({subscription:(0,g.ai)(),result:Xt}),Qt=(0,g.NW)({subscription:(0,g.ai)(),result:ot((0,g.KC)([yt,bt]))}),$t=(0,g.NW)({subscription:(0,g.ai)(),result:(0,g.ai)()}),er=(0,g.NW)({pubkey:(0,g.Yj)(),gossip:(0,g.me)((0,g.Yj)()),tpu:(0,g.me)((0,g.Yj)()),rpc:(0,g.me)((0,g.Yj)()),version:(0,g.me)((0,g.Yj)())}),tr=(0,g.NW)({votePubkey:(0,g.Yj)(),nodePubkey:(0,g.Yj)(),activatedStake:(0,g.ai)(),epochVoteAccount:(0,g.zM)(),epochCredits:(0,g.YO)((0,g.PV)([(0,g.ai)(),(0,g.ai)(),(0,g.ai)()])),commission:(0,g.ai)(),lastVote:(0,g.ai)(),rootSlot:(0,g.me)((0,g.ai)())}),rr=it((0,g.NW)({current:(0,g.YO)(tr),delinquent:(0,g.YO)(tr)})),nr=(0,g.KC)([(0,g.eu)("processed"),(0,g.eu)("confirmed"),(0,g.eu)("finalized")]),ir=(0,g.NW)({slot:(0,g.ai)(),confirmations:(0,g.me)((0,g.ai)()),err:mt,confirmationStatus:(0,g.lq)(nr)}),sr=st((0,g.YO)((0,g.me)(ir))),or=it((0,g.ai)()),ar=(0,g.NW)({accountKey:Xe,writableIndexes:(0,g.YO)((0,g.ai)()),readonlyIndexes:(0,g.YO)((0,g.ai)())}),cr=(0,g.NW)({signatures:(0,g.YO)((0,g.Yj)()),message:(0,g.NW)({accountKeys:(0,g.YO)((0,g.Yj)()),header:(0,g.NW)({numRequiredSignatures:(0,g.ai)(),numReadonlySignedAccounts:(0,g.ai)(),numReadonlyUnsignedAccounts:(0,g.ai)()}),instructions:(0,g.YO)((0,g.NW)({accounts:(0,g.YO)((0,g.ai)()),data:(0,g.Yj)(),programIdIndex:(0,g.ai)()})),recentBlockhash:(0,g.Yj)(),addressTableLookups:(0,g.lq)((0,g.YO)(ar))})}),ur=(0,g.NW)({pubkey:Xe,signer:(0,g.zM)(),writable:(0,g.zM)(),source:(0,g.lq)((0,g.KC)([(0,g.eu)("transaction"),(0,g.eu)("lookupTable")]))}),lr=(0,g.NW)({accountKeys:(0,g.YO)(ur),signatures:(0,g.YO)((0,g.Yj)())}),dr=(0,g.NW)({parsed:(0,g.L5)(),program:(0,g.Yj)(),programId:Xe}),hr=(0,g.NW)({accounts:(0,g.YO)(Xe),data:(0,g.Yj)(),programId:Xe}),gr=(0,g.KC)([hr,dr]),pr=(0,g.KC)([(0,g.NW)({parsed:(0,g.L5)(),program:(0,g.Yj)(),programId:(0,g.Yj)()}),(0,g.NW)({accounts:(0,g.YO)((0,g.Yj)()),data:(0,g.Yj)(),programId:(0,g.Yj)()})]),mr=(0,g.au)(gr,pr,(e=>"accounts"in e?(0,g.vt)(e,hr):(0,g.vt)(e,dr))),yr=(0,g.NW)({signatures:(0,g.YO)((0,g.Yj)()),message:(0,g.NW)({accountKeys:(0,g.YO)(ur),instructions:(0,g.YO)(mr),recentBlockhash:(0,g.Yj)(),addressTableLookups:(0,g.lq)((0,g.me)((0,g.YO)(ar)))})}),br=(0,g.NW)({accountIndex:(0,g.ai)(),mint:(0,g.Yj)(),owner:(0,g.lq)((0,g.Yj)()),uiTokenAmount:Ot}),fr=(0,g.NW)({writable:(0,g.YO)(Xe),readonly:(0,g.YO)(Xe)}),kr=(0,g.NW)({err:mt,fee:(0,g.ai)(),innerInstructions:(0,g.lq)((0,g.me)((0,g.YO)((0,g.NW)({index:(0,g.ai)(),instructions:(0,g.YO)((0,g.NW)({accounts:(0,g.YO)((0,g.ai)()),data:(0,g.Yj)(),programIdIndex:(0,g.ai)()}))})))),preBalances:(0,g.YO)((0,g.ai)()),postBalances:(0,g.YO)((0,g.ai)()),logMessages:(0,g.lq)((0,g.me)((0,g.YO)((0,g.Yj)()))),preTokenBalances:(0,g.lq)((0,g.me)((0,g.YO)(br))),postTokenBalances:(0,g.lq)((0,g.me)((0,g.YO)(br))),loadedAddresses:(0,g.lq)(fr),computeUnitsConsumed:(0,g.lq)((0,g.ai)())}),wr=(0,g.NW)({err:mt,fee:(0,g.ai)(),innerInstructions:(0,g.lq)((0,g.me)((0,g.YO)((0,g.NW)({index:(0,g.ai)(),instructions:(0,g.YO)(mr)})))),preBalances:(0,g.YO)((0,g.ai)()),postBalances:(0,g.YO)((0,g.ai)()),logMessages:(0,g.lq)((0,g.me)((0,g.YO)((0,g.Yj)()))),preTokenBalances:(0,g.lq)((0,g.me)((0,g.YO)(br))),postTokenBalances:(0,g.lq)((0,g.me)((0,g.YO)(br))),loadedAddresses:(0,g.lq)(fr),computeUnitsConsumed:(0,g.lq)((0,g.ai)())}),Sr=(0,g.KC)([(0,g.eu)(0),(0,g.eu)("legacy")]),Ir=(0,g.NW)({pubkey:(0,g.Yj)(),lamports:(0,g.ai)(),postBalance:(0,g.me)((0,g.ai)()),rewardType:(0,g.me)((0,g.Yj)()),commission:(0,g.lq)((0,g.me)((0,g.ai)()))}),vr=it((0,g.me)((0,g.NW)({blockhash:(0,g.Yj)(),previousBlockhash:(0,g.Yj)(),parentSlot:(0,g.ai)(),transactions:(0,g.YO)((0,g.NW)({transaction:cr,meta:(0,g.me)(kr),version:(0,g.lq)(Sr)})),rewards:(0,g.lq)((0,g.YO)(Ir)),blockTime:(0,g.me)((0,g.ai)()),blockHeight:(0,g.me)((0,g.ai)())}))),Ar=it((0,g.me)((0,g.NW)({blockhash:(0,g.Yj)(),previousBlockhash:(0,g.Yj)(),parentSlot:(0,g.ai)(),rewards:(0,g.lq)((0,g.YO)(Ir)),blockTime:(0,g.me)((0,g.ai)()),blockHeight:(0,g.me)((0,g.ai)())}))),_r=it((0,g.me)((0,g.NW)({blockhash:(0,g.Yj)(),previousBlockhash:(0,g.Yj)(),parentSlot:(0,g.ai)(),transactions:(0,g.YO)((0,g.NW)({transaction:lr,meta:(0,g.me)(kr),version:(0,g.lq)(Sr)})),rewards:(0,g.lq)((0,g.YO)(Ir)),blockTime:(0,g.me)((0,g.ai)()),blockHeight:(0,g.me)((0,g.ai)())}))),Pr=it((0,g.me)((0,g.NW)({blockhash:(0,g.Yj)(),previousBlockhash:(0,g.Yj)(),parentSlot:(0,g.ai)(),transactions:(0,g.YO)((0,g.NW)({transaction:yr,meta:(0,g.me)(wr),version:(0,g.lq)(Sr)})),rewards:(0,g.lq)((0,g.YO)(Ir)),blockTime:(0,g.me)((0,g.ai)()),blockHeight:(0,g.me)((0,g.ai)())}))),Er=it((0,g.me)((0,g.NW)({blockhash:(0,g.Yj)(),previousBlockhash:(0,g.Yj)(),parentSlot:(0,g.ai)(),transactions:(0,g.YO)((0,g.NW)({transaction:lr,meta:(0,g.me)(wr),version:(0,g.lq)(Sr)})),rewards:(0,g.lq)((0,g.YO)(Ir)),blockTime:(0,g.me)((0,g.ai)()),blockHeight:(0,g.me)((0,g.ai)())}))),Br=it((0,g.me)((0,g.NW)({blockhash:(0,g.Yj)(),previousBlockhash:(0,g.Yj)(),parentSlot:(0,g.ai)(),rewards:(0,g.lq)((0,g.YO)(Ir)),blockTime:(0,g.me)((0,g.ai)()),blockHeight:(0,g.me)((0,g.ai)())}))),Wr=it((0,g.me)((0,g.NW)({blockhash:(0,g.Yj)(),previousBlockhash:(0,g.Yj)(),parentSlot:(0,g.ai)(),transactions:(0,g.YO)((0,g.NW)({transaction:cr,meta:(0,g.me)(kr)})),rewards:(0,g.lq)((0,g.YO)(Ir)),blockTime:(0,g.me)((0,g.ai)())}))),Tr=it((0,g.me)((0,g.NW)({blockhash:(0,g.Yj)(),previousBlockhash:(0,g.Yj)(),parentSlot:(0,g.ai)(),signatures:(0,g.YO)((0,g.Yj)()),blockTime:(0,g.me)((0,g.ai)())}))),Or=it((0,g.me)((0,g.NW)({slot:(0,g.ai)(),meta:(0,g.me)(kr),blockTime:(0,g.lq)((0,g.me)((0,g.ai)())),transaction:cr,version:(0,g.lq)(Sr)}))),Nr=it((0,g.me)((0,g.NW)({slot:(0,g.ai)(),transaction:yr,meta:(0,g.me)(wr),blockTime:(0,g.lq)((0,g.me)((0,g.ai)())),version:(0,g.lq)(Sr)}))),Rr=st((0,g.NW)({blockhash:(0,g.Yj)(),feeCalculator:(0,g.NW)({lamportsPerSignature:(0,g.ai)()})})),Cr=st((0,g.NW)({blockhash:(0,g.Yj)(),lastValidBlockHeight:(0,g.ai)()})),xr=st((0,g.zM)()),Lr=(0,g.NW)({slot:(0,g.ai)(),numTransactions:(0,g.ai)(),numSlots:(0,g.ai)(),samplePeriodSecs:(0,g.ai)()}),Kr=it((0,g.YO)(Lr)),zr=st((0,g.me)((0,g.NW)({feeCalculator:(0,g.NW)({lamportsPerSignature:(0,g.ai)()})}))),Yr=it((0,g.Yj)()),qr=it((0,g.Yj)()),Dr=(0,g.NW)({err:mt,logs:(0,g.YO)((0,g.Yj)()),signature:(0,g.Yj)()}),Hr=(0,g.NW)({result:ot(Dr),subscription:(0,g.ai)()}),jr={"solana-client":"js/".concat("0.0.0-development")};class Mr{constructor(e,t){let r,n,i,s,o,a;var c;this._commitment=void 0,this._confirmTransactionInitialTimeout=void 0,this._rpcEndpoint=void 0,this._rpcWsEndpoint=void 0,this._rpcClient=void 0,this._rpcRequest=void 0,this._rpcBatchRequest=void 0,this._rpcWebSocket=void 0,this._rpcWebSocketConnected=!1,this._rpcWebSocketHeartbeat=null,this._rpcWebSocketIdleTimeout=null,this._rpcWebSocketGeneration=0,this._disableBlockhashCaching=!1,this._pollingBlockhash=!1,this._blockhashInfo={latestBlockhash:null,lastFetch:0,transactionSignatures:[],simulatedSignatures:[]},this._nextClientSubscriptionId=0,this._subscriptionDisposeFunctionsByClientSubscriptionId={},this._subscriptionHashByClientSubscriptionId={},this._subscriptionStateChangeCallbacksByHash={},this._subscriptionCallbacksByServerSubscriptionId={},this._subscriptionsByHash={},this._subscriptionsAutoDisposedByRpc=new Set,this.getBlockHeight=(()=>{const e={};return async t=>{var r;const{commitment:n,config:i}=et(t),s=this._buildArgs([],n,void 0,i),o=He(s);return e[o]=null!==(r=e[o])&&void 0!==r?r:(async()=>{try{const e=await this._rpcRequest("getBlockHeight",s),t=(0,g.vt)(e,it((0,g.ai)()));if("error"in t)throw new we(t.error,"failed to get block height information");return t.result}finally{delete e[o]}})(),await e[o]}})(),t&&"string"===typeof t?this._commitment=t:t&&(this._commitment=t.commitment,this._confirmTransactionInitialTimeout=t.confirmTransactionInitialTimeout,r=t.wsEndpoint,n=t.httpHeaders,i=t.fetch,s=t.fetchMiddleware,o=t.disableRetryOnRateLimit,a=t.httpAgent),this._rpcEndpoint=function(e){if(!1===/^https?:/.test(e))throw new TypeError("Endpoint URL must start with `http:` or `https:`.");return e}(e),this._rpcWsEndpoint=r||function(e){const t=e.match(Ge);if(null==t)throw TypeError("Failed to validate endpoint URL `".concat(e,"`"));const[r,n,i,s]=t,o=e.startsWith("https:")?"wss:":"ws:",a=null==i?null:parseInt(i.slice(1),10),c=null==a?"":":".concat(a+1);return"".concat(o,"//").concat(n).concat(c).concat(s)}(e),this._rpcClient=function(e,t,r,n,i,s){const o=r||Ue;let a;return null!=s&&console.warn("You have supplied an `httpAgent` when creating a `Connection` in a browser environment.It has been ignored; `httpAgent` is only used in Node environments."),n&&(a=async(e,t)=>{const r=await new Promise(((r,i)=>{try{n(e,t,((e,t)=>r([e,t])))}catch(s){i(s)}}));return await o(...r)}),new(m())((async(r,n)=>{const s={method:"POST",body:r,agent:void 0,headers:Object.assign({"Content-Type":"application/json"},t||{},jr)};try{let t,r=5,c=500;for(;t=a?await a(e,s):await o(e,s),429===t.status&&!0!==i&&(r-=1,0!==r);)console.error("Server responded with ".concat(t.status," ").concat(t.statusText,".  Retrying after ").concat(c,"ms delay...")),await Ie(c),c*=2;const u=await t.text();t.ok?n(null,u):n(new Error("".concat(t.status," ").concat(t.statusText,": ").concat(u)))}catch(c){c instanceof Error&&n(c)}}),{})}(e,n,i,s,o,a),this._rpcRequest=(c=this._rpcClient,(e,t)=>new Promise(((r,n)=>{c.request(e,t,((e,t)=>{e?n(e):r(t)}))}))),this._rpcBatchRequest=function(e){return t=>new Promise(((r,n)=>{0===t.length&&r([]);const i=t.map((t=>e.request(t.methodName,t.args)));e.request(i,((e,t)=>{e?n(e):r(t)}))}))}(this._rpcClient),this._rpcWebSocket=new Ve(this._rpcWsEndpoint,{autoconnect:!1,max_reconnects:1/0}),this._rpcWebSocket.on("open",this._wsOnOpen.bind(this)),this._rpcWebSocket.on("error",this._wsOnError.bind(this)),this._rpcWebSocket.on("close",this._wsOnClose.bind(this)),this._rpcWebSocket.on("accountNotification",this._wsOnAccountNotification.bind(this)),this._rpcWebSocket.on("programNotification",this._wsOnProgramAccountNotification.bind(this)),this._rpcWebSocket.on("slotNotification",this._wsOnSlotNotification.bind(this)),this._rpcWebSocket.on("slotsUpdatesNotification",this._wsOnSlotUpdatesNotification.bind(this)),this._rpcWebSocket.on("signatureNotification",this._wsOnSignatureNotification.bind(this)),this._rpcWebSocket.on("rootNotification",this._wsOnRootNotification.bind(this)),this._rpcWebSocket.on("logsNotification",this._wsOnLogsNotification.bind(this))}get commitment(){return this._commitment}get rpcEndpoint(){return this._rpcEndpoint}async getBalanceAndContext(e,t){const{commitment:r,config:n}=et(t),i=this._buildArgs([e.toBase58()],r,void 0,n),s=await this._rpcRequest("getBalance",i),o=(0,g.vt)(s,st((0,g.ai)()));if("error"in o)throw new we(o.error,"failed to get balance for ".concat(e.toBase58()));return o.result}async getBalance(e,t){return await this.getBalanceAndContext(e,t).then((e=>e.value)).catch((t=>{throw new Error("failed to get balance of account "+e.toBase58()+": "+t)}))}async getBlockTime(e){const t=await this._rpcRequest("getBlockTime",[e]),r=(0,g.vt)(t,it((0,g.me)((0,g.ai)())));if("error"in r)throw new we(r.error,"failed to get block time for slot ".concat(e));return r.result}async getMinimumLedgerSlot(){const e=await this._rpcRequest("minimumLedgerSlot",[]),t=(0,g.vt)(e,it((0,g.ai)()));if("error"in t)throw new we(t.error,"failed to get minimum ledger slot");return t.result}async getFirstAvailableBlock(){const e=await this._rpcRequest("getFirstAvailableBlock",[]),t=(0,g.vt)(e,Wt);if("error"in t)throw new we(t.error,"failed to get first available block");return t.result}async getSupply(e){let t={};t="string"===typeof e?{commitment:e}:e?{...e,commitment:e&&e.commitment||this.commitment}:{commitment:this.commitment};const r=await this._rpcRequest("getSupply",[t]),n=(0,g.vt)(r,Tt);if("error"in n)throw new we(n.error,"failed to get supply");return n.result}async getTokenSupply(e,t){const r=this._buildArgs([e.toBase58()],t),n=await this._rpcRequest("getTokenSupply",r),i=(0,g.vt)(n,st(Ot));if("error"in i)throw new we(i.error,"failed to get token supply");return i.result}async getTokenAccountBalance(e,t){const r=this._buildArgs([e.toBase58()],t),n=await this._rpcRequest("getTokenAccountBalance",r),i=(0,g.vt)(n,st(Ot));if("error"in i)throw new we(i.error,"failed to get token account balance");return i.result}async getTokenAccountsByOwner(e,t,r){const{commitment:n,config:i}=et(r);let s=[e.toBase58()];"mint"in t?s.push({mint:t.mint.toBase58()}):s.push({programId:t.programId.toBase58()});const o=this._buildArgs(s,n,"base64",i),a=await this._rpcRequest("getTokenAccountsByOwner",o),c=(0,g.vt)(a,Rt);if("error"in c)throw new we(c.error,"failed to get token accounts owned by account ".concat(e.toBase58()));return c.result}async getParsedTokenAccountsByOwner(e,t,r){let n=[e.toBase58()];"mint"in t?n.push({mint:t.mint.toBase58()}):n.push({programId:t.programId.toBase58()});const i=this._buildArgs(n,r,"jsonParsed"),s=await this._rpcRequest("getTokenAccountsByOwner",i),o=(0,g.vt)(s,xt);if("error"in o)throw new we(o.error,"failed to get token accounts owned by account ".concat(e.toBase58()));return o.result}async getLargestAccounts(e){const t={...e,commitment:e&&e.commitment||this.commitment},r=t.filter||t.commitment?[t]:[],n=await this._rpcRequest("getLargestAccounts",r),i=(0,g.vt)(n,Lt);if("error"in i)throw new we(i.error,"failed to get largest accounts");return i.result}async getTokenLargestAccounts(e,t){const r=this._buildArgs([e.toBase58()],t),n=await this._rpcRequest("getTokenLargestAccounts",r),i=(0,g.vt)(n,Nt);if("error"in i)throw new we(i.error,"failed to get token largest accounts");return i.result}async getAccountInfoAndContext(e,t){const{commitment:r,config:n}=et(t),i=this._buildArgs([e.toBase58()],r,"base64",n),s=await this._rpcRequest("getAccountInfo",i),o=(0,g.vt)(s,st((0,g.me)(Kt)));if("error"in o)throw new we(o.error,"failed to get info about account ".concat(e.toBase58()));return o.result}async getParsedAccountInfo(e,t){const{commitment:r,config:n}=et(t),i=this._buildArgs([e.toBase58()],r,"jsonParsed",n),s=await this._rpcRequest("getAccountInfo",i),o=(0,g.vt)(s,st((0,g.me)(qt)));if("error"in o)throw new we(o.error,"failed to get info about account ".concat(e.toBase58()));return o.result}async getAccountInfo(e,t){try{return(await this.getAccountInfoAndContext(e,t)).value}catch(r){throw new Error("failed to get info about account "+e.toBase58()+": "+r)}}async getMultipleParsedAccounts(e,t){const{commitment:r,config:n}=et(t),i=e.map((e=>e.toBase58())),s=this._buildArgs([i],r,"jsonParsed",n),o=await this._rpcRequest("getMultipleAccounts",s),a=(0,g.vt)(o,st((0,g.YO)((0,g.me)(qt))));if("error"in a)throw new we(a.error,"failed to get info for accounts ".concat(i));return a.result}async getMultipleAccountsInfoAndContext(e,t){const{commitment:r,config:n}=et(t),i=e.map((e=>e.toBase58())),s=this._buildArgs([i],r,"base64",n),o=await this._rpcRequest("getMultipleAccounts",s),a=(0,g.vt)(o,st((0,g.YO)((0,g.me)(Kt))));if("error"in a)throw new we(a.error,"failed to get info for accounts ".concat(i));return a.result}async getMultipleAccountsInfo(e,t){return(await this.getMultipleAccountsInfoAndContext(e,t)).value}async getStakeActivation(e,t,r){const{commitment:n,config:i}=et(t),s=this._buildArgs([e.toBase58()],n,void 0,{...i,epoch:null!=r?r:null===i||void 0===i?void 0:i.epoch}),o=await this._rpcRequest("getStakeActivation",s),a=(0,g.vt)(o,it(Ht));if("error"in a)throw new we(a.error,"failed to get Stake Activation ".concat(e.toBase58()));return a.result}async getProgramAccounts(e,t){const{commitment:r,config:n}=et(t),{encoding:i,...s}=n||{},o=this._buildArgs([e.toBase58()],r,i||"base64",{...s,...s.filters?{filters:tt(s.filters)}:null}),a=await this._rpcRequest("getProgramAccounts",o),c=(0,g.YO)(zt),u=!0===s.withContext?(0,g.vt)(a,st(c)):(0,g.vt)(a,it(c));if("error"in u)throw new we(u.error,"failed to get accounts owned by program ".concat(e.toBase58()));return u.result}async getParsedProgramAccounts(e,t){const{commitment:r,config:n}=et(t),i=this._buildArgs([e.toBase58()],r,"jsonParsed",n),s=await this._rpcRequest("getProgramAccounts",i),o=(0,g.vt)(s,it((0,g.YO)(Dt)));if("error"in o)throw new we(o.error,"failed to get accounts owned by program ".concat(e.toBase58()));return o.result}async confirmTransaction(e,t){let r,n;if("string"==typeof e)r=e;else{var i;const t=e;if(null!==(i=t.abortSignal)&&void 0!==i&&i.aborted)return Promise.reject(t.abortSignal.reason);r=t.signature}try{n=c().decode(r)}catch(s){throw new Error("signature must be base58 encoded: "+r)}return G(64===n.length,"signature has invalid length"),"string"===typeof e?await this.confirmTransactionUsingLegacyTimeoutStrategy({commitment:t||this.commitment,signature:r}):"lastValidBlockHeight"in e?await this.confirmTransactionUsingBlockHeightExceedanceStrategy({commitment:t||this.commitment,strategy:e}):await this.confirmTransactionUsingDurableNonceStrategy({commitment:t||this.commitment,strategy:e})}getCancellationPromise(e){return new Promise(((t,r)=>{null!=e&&(e.aborted?r(e.reason):e.addEventListener("abort",(()=>{r(e.reason)})))}))}getTransactionConfirmationPromise(e){let t,r,{commitment:n,signature:i}=e,s=!1;return{abortConfirmation:()=>{r&&(r(),r=void 0),null!=t&&(this.removeSignatureListener(t),t=void 0)},confirmationPromise:new Promise(((e,o)=>{try{t=this.onSignature(i,((r,n)=>{t=void 0;const i={context:n,value:r};e({__type:ne.PROCESSED,response:i})}),n);const a=new Promise((e=>{null==t?e():r=this._onSubscriptionStateChange(t,(t=>{"subscribed"===t&&e()}))}));(async()=>{if(await a,s)return;const t=await this.getSignatureStatus(i);if(s)return;if(null==t)return;const{context:r,value:c}=t;if(null!=c)if(null!==c&&void 0!==c&&c.err)o(c.err);else{switch(n){case"confirmed":case"single":case"singleGossip":if("processed"===c.confirmationStatus)return;break;case"finalized":case"max":case"root":if("processed"===c.confirmationStatus||"confirmed"===c.confirmationStatus)return}s=!0,e({__type:ne.PROCESSED,response:{context:r,value:c}})}})()}catch(a){o(a)}}))}}async confirmTransactionUsingBlockHeightExceedanceStrategy(e){let{commitment:t,strategy:{abortSignal:r,lastValidBlockHeight:n,signature:i}}=e,s=!1;const o=new Promise((e=>{const r=async()=>{try{return await this.getBlockHeight(t)}catch(e){return-1}};(async()=>{let t=await r();if(!s){for(;t<=n;){if(await Ie(1e3),s)return;if(t=await r(),s)return}e({__type:ne.BLOCKHEIGHT_EXCEEDED})}})()})),{abortConfirmation:a,confirmationPromise:c}=this.getTransactionConfirmationPromise({commitment:t,signature:i}),u=this.getCancellationPromise(r);let l;try{const e=await Promise.race([u,c,o]);if(e.__type!==ne.PROCESSED)throw new Y(i);l=e.response}finally{s=!0,a()}return l}async confirmTransactionUsingDurableNonceStrategy(e){let{commitment:t,strategy:{abortSignal:r,minContextSlot:n,nonceAccountPubkey:i,nonceValue:s,signature:o}}=e,a=!1;const c=new Promise((e=>{let r=s,o=null;const c=async()=>{try{const{context:e,value:r}=await this.getNonceAndContext(i,{commitment:t,minContextSlot:n});return o=e.slot,null===r||void 0===r?void 0:r.nonce}catch(e){return r}};(async()=>{if(r=await c(),!a)for(;;){if(s!==r)return void e({__type:ne.NONCE_INVALID,slotInWhichNonceDidAdvance:o});if(await Ie(2e3),a)return;if(r=await c(),a)return}})()})),{abortConfirmation:u,confirmationPromise:l}=this.getTransactionConfirmationPromise({commitment:t,signature:o}),d=this.getCancellationPromise(r);let h;try{const e=await Promise.race([d,l,c]);if(e.__type===ne.PROCESSED)h=e.response;else{var g;let r;for(;;){var p;const t=await this.getSignatureStatus(o);if(null==t)break;if(!(t.context.slot<(null!==(p=e.slotInWhichNonceDidAdvance)&&void 0!==p?p:n))){r=t;break}await Ie(400)}if(null===(g=r)||void 0===g||!g.value)throw new D(o);{const e=t||"finalized",{confirmationStatus:n}=r.value;switch(e){case"processed":case"recent":if("processed"!==n&&"confirmed"!==n&&"finalized"!==n)throw new D(o);break;case"confirmed":case"single":case"singleGossip":if("confirmed"!==n&&"finalized"!==n)throw new D(o);break;case"finalized":case"max":case"root":if("finalized"!==n)throw new D(o)}h={context:r.context,value:{err:r.value.err}}}}}finally{a=!0,u()}return h}async confirmTransactionUsingLegacyTimeoutStrategy(e){let t,{commitment:r,signature:n}=e;const i=new Promise((e=>{let n=this._confirmTransactionInitialTimeout||6e4;switch(r){case"processed":case"recent":case"single":case"confirmed":case"singleGossip":n=this._confirmTransactionInitialTimeout||3e4}t=setTimeout((()=>e({__type:ne.TIMED_OUT,timeoutMs:n})),n)})),{abortConfirmation:s,confirmationPromise:o}=this.getTransactionConfirmationPromise({commitment:r,signature:n});let a;try{const e=await Promise.race([o,i]);if(e.__type!==ne.PROCESSED)throw new q(n,e.timeoutMs/1e3);a=e.response}finally{clearTimeout(t),s()}return a}async getClusterNodes(){const e=await this._rpcRequest("getClusterNodes",[]),t=(0,g.vt)(e,it((0,g.YO)(er)));if("error"in t)throw new we(t.error,"failed to get cluster nodes");return t.result}async getVoteAccounts(e){const t=this._buildArgs([],e),r=await this._rpcRequest("getVoteAccounts",t),n=(0,g.vt)(r,rr);if("error"in n)throw new we(n.error,"failed to get vote accounts");return n.result}async getSlot(e){const{commitment:t,config:r}=et(e),n=this._buildArgs([],t,void 0,r),i=await this._rpcRequest("getSlot",n),s=(0,g.vt)(i,it((0,g.ai)()));if("error"in s)throw new we(s.error,"failed to get slot");return s.result}async getSlotLeader(e){const{commitment:t,config:r}=et(e),n=this._buildArgs([],t,void 0,r),i=await this._rpcRequest("getSlotLeader",n),s=(0,g.vt)(i,it((0,g.Yj)()));if("error"in s)throw new we(s.error,"failed to get slot leader");return s.result}async getSlotLeaders(e,t){const r=[e,t],n=await this._rpcRequest("getSlotLeaders",r),i=(0,g.vt)(n,it((0,g.YO)(Xe)));if("error"in i)throw new we(i.error,"failed to get slot leaders");return i.result}async getSignatureStatus(e,t){const{context:r,value:n}=await this.getSignatureStatuses([e],t);G(1===n.length);return{context:r,value:n[0]}}async getSignatureStatuses(e,t){const r=[e];t&&r.push(t);const n=await this._rpcRequest("getSignatureStatuses",r),i=(0,g.vt)(n,sr);if("error"in i)throw new we(i.error,"failed to get signature status");return i.result}async getTransactionCount(e){const{commitment:t,config:r}=et(e),n=this._buildArgs([],t,void 0,r),i=await this._rpcRequest("getTransactionCount",n),s=(0,g.vt)(i,it((0,g.ai)()));if("error"in s)throw new we(s.error,"failed to get transaction count");return s.result}async getTotalSupply(e){return(await this.getSupply({commitment:e,excludeNonCirculatingAccountsList:!0})).value.total}async getInflationGovernor(e){const t=this._buildArgs([],e),r=await this._rpcRequest("getInflationGovernor",t),n=(0,g.vt)(r,vt);if("error"in n)throw new we(n.error,"failed to get inflation");return n.result}async getInflationReward(e,t,r){const{commitment:n,config:i}=et(r),s=this._buildArgs([e.map((e=>e.toBase58()))],n,void 0,{...i,epoch:null!=t?t:null===i||void 0===i?void 0:i.epoch}),o=await this._rpcRequest("getInflationReward",s),a=(0,g.vt)(o,ut);if("error"in a)throw new we(a.error,"failed to get inflation reward");return a.result}async getInflationRate(){const e=await this._rpcRequest("getInflationRate",[]),t=(0,g.vt)(e,At);if("error"in t)throw new we(t.error,"failed to get inflation rate");return t.result}async getEpochInfo(e){const{commitment:t,config:r}=et(e),n=this._buildArgs([],t,void 0,r),i=await this._rpcRequest("getEpochInfo",n),s=(0,g.vt)(i,Pt);if("error"in s)throw new we(s.error,"failed to get epoch info");return s.result}async getEpochSchedule(){const e=await this._rpcRequest("getEpochSchedule",[]),t=(0,g.vt)(e,Et);if("error"in t)throw new we(t.error,"failed to get epoch schedule");const r=t.result;return new Me(r.slotsPerEpoch,r.leaderScheduleSlotOffset,r.warmup,r.firstNormalEpoch,r.firstNormalSlot)}async getLeaderSchedule(){const e=await this._rpcRequest("getLeaderSchedule",[]),t=(0,g.vt)(e,Bt);if("error"in t)throw new we(t.error,"failed to get leader schedule");return t.result}async getMinimumBalanceForRentExemption(e,t){const r=this._buildArgs([e],t),n=await this._rpcRequest("getMinimumBalanceForRentExemption",r),i=(0,g.vt)(n,or);return"error"in i?(console.warn("Unable to fetch minimum balance for rent exemption"),0):i.result}async getRecentBlockhashAndContext(e){const t=this._buildArgs([],e),r=await this._rpcRequest("getRecentBlockhash",t),n=(0,g.vt)(r,Rr);if("error"in n)throw new we(n.error,"failed to get recent blockhash");return n.result}async getRecentPerformanceSamples(e){const t=await this._rpcRequest("getRecentPerformanceSamples",e?[e]:[]),r=(0,g.vt)(t,Kr);if("error"in r)throw new we(r.error,"failed to get recent performance samples");return r.result}async getFeeCalculatorForBlockhash(e,t){const r=this._buildArgs([e],t),n=await this._rpcRequest("getFeeCalculatorForBlockhash",r),i=(0,g.vt)(n,zr);if("error"in i)throw new we(i.error,"failed to get fee calculator");const{context:s,value:o}=i.result;return{context:s,value:null!==o?o.feeCalculator:null}}async getFeeForMessage(e,t){const r=_(e.serialize()).toString("base64"),n=this._buildArgs([r],t),i=await this._rpcRequest("getFeeForMessage",n),s=(0,g.vt)(i,st((0,g.me)((0,g.ai)())));if("error"in s)throw new we(s.error,"failed to get fee for message");if(null===s.result)throw new Error("invalid blockhash");return s.result}async getRecentPrioritizationFees(e){var t;const r=null===e||void 0===e||null===(t=e.lockedWritableAccounts)||void 0===t?void 0:t.map((e=>e.toBase58())),n=null!==r&&void 0!==r&&r.length?[r]:[],i=await this._rpcRequest("getRecentPrioritizationFees",n),s=(0,g.vt)(i,_t);if("error"in s)throw new we(s.error,"failed to get recent prioritization fees");return s.result}async getRecentBlockhash(e){try{return(await this.getRecentBlockhashAndContext(e)).value}catch(t){throw new Error("failed to get recent blockhash: "+t)}}async getLatestBlockhash(e){try{return(await this.getLatestBlockhashAndContext(e)).value}catch(t){throw new Error("failed to get recent blockhash: "+t)}}async getLatestBlockhashAndContext(e){const{commitment:t,config:r}=et(e),n=this._buildArgs([],t,void 0,r),i=await this._rpcRequest("getLatestBlockhash",n),s=(0,g.vt)(i,Cr);if("error"in s)throw new we(s.error,"failed to get latest blockhash");return s.result}async isBlockhashValid(e,t){const{commitment:r,config:n}=et(t),i=this._buildArgs([e],r,void 0,n),s=await this._rpcRequest("isBlockhashValid",i),o=(0,g.vt)(s,xr);if("error"in o)throw new we(o.error,"failed to determine if the blockhash `"+e+"`is valid");return o.result}async getVersion(){const e=await this._rpcRequest("getVersion",[]),t=(0,g.vt)(e,it(ft));if("error"in t)throw new we(t.error,"failed to get version");return t.result}async getGenesisHash(){const e=await this._rpcRequest("getGenesisHash",[]),t=(0,g.vt)(e,it((0,g.Yj)()));if("error"in t)throw new we(t.error,"failed to get genesis hash");return t.result}async getBlock(e,t){const{commitment:r,config:n}=et(t),i=this._buildArgsAtLeastConfirmed([e],r,void 0,n),s=await this._rpcRequest("getBlock",i);try{switch(null===n||void 0===n?void 0:n.transactionDetails){case"accounts":{const e=(0,g.vt)(s,_r);if("error"in e)throw e.error;return e.result}case"none":{const e=(0,g.vt)(s,Ar);if("error"in e)throw e.error;return e.result}default:{const e=(0,g.vt)(s,vr);if("error"in e)throw e.error;const{result:t}=e;return t?{...t,transactions:t.transactions.map((e=>{let{transaction:t,meta:r,version:n}=e;return{meta:r,transaction:{...t,message:at(n,t.message)},version:n}}))}:null}}}catch(o){throw new we(o,"failed to get confirmed block")}}async getParsedBlock(e,t){const{commitment:r,config:n}=et(t),i=this._buildArgsAtLeastConfirmed([e],r,"jsonParsed",n),s=await this._rpcRequest("getBlock",i);try{switch(null===n||void 0===n?void 0:n.transactionDetails){case"accounts":{const e=(0,g.vt)(s,Er);if("error"in e)throw e.error;return e.result}case"none":{const e=(0,g.vt)(s,Br);if("error"in e)throw e.error;return e.result}default:{const e=(0,g.vt)(s,Pr);if("error"in e)throw e.error;return e.result}}}catch(o){throw new we(o,"failed to get block")}}async getBlockProduction(e){let t,r;if("string"===typeof e)r=e;else if(e){const{commitment:n,...i}=e;r=n,t=i}const n=this._buildArgs([],r,"base64",t),i=await this._rpcRequest("getBlockProduction",n),s=(0,g.vt)(i,It);if("error"in s)throw new we(s.error,"failed to get block production information");return s.result}async getTransaction(e,t){const{commitment:r,config:n}=et(t),i=this._buildArgsAtLeastConfirmed([e],r,void 0,n),s=await this._rpcRequest("getTransaction",i),o=(0,g.vt)(s,Or);if("error"in o)throw new we(o.error,"failed to get transaction");const a=o.result;return a?{...a,transaction:{...a.transaction,message:at(a.version,a.transaction.message)}}:a}async getParsedTransaction(e,t){const{commitment:r,config:n}=et(t),i=this._buildArgsAtLeastConfirmed([e],r,"jsonParsed",n),s=await this._rpcRequest("getTransaction",i),o=(0,g.vt)(s,Nr);if("error"in o)throw new we(o.error,"failed to get transaction");return o.result}async getParsedTransactions(e,t){const{commitment:r,config:n}=et(t),i=e.map((e=>({methodName:"getTransaction",args:this._buildArgsAtLeastConfirmed([e],r,"jsonParsed",n)})));return(await this._rpcBatchRequest(i)).map((e=>{const t=(0,g.vt)(e,Nr);if("error"in t)throw new we(t.error,"failed to get transactions");return t.result}))}async getTransactions(e,t){const{commitment:r,config:n}=et(t),i=e.map((e=>({methodName:"getTransaction",args:this._buildArgsAtLeastConfirmed([e],r,void 0,n)})));return(await this._rpcBatchRequest(i)).map((e=>{const t=(0,g.vt)(e,Or);if("error"in t)throw new we(t.error,"failed to get transactions");const r=t.result;return r?{...r,transaction:{...r.transaction,message:at(r.version,r.transaction.message)}}:r}))}async getConfirmedBlock(e,t){const r=this._buildArgsAtLeastConfirmed([e],t),n=await this._rpcRequest("getConfirmedBlock",r),i=(0,g.vt)(n,Wr);if("error"in i)throw new we(i.error,"failed to get confirmed block");const s=i.result;if(!s)throw new Error("Confirmed block "+e+" not found");const o={...s,transactions:s.transactions.map((e=>{let{transaction:t,meta:r}=e;const n=new ee(t.message);return{meta:r,transaction:{...t,message:n}}}))};return{...o,transactions:o.transactions.map((e=>{let{transaction:t,meta:r}=e;return{meta:r,transaction:oe.populate(t.message,t.signatures)}}))}}async getBlocks(e,t,r){const n=this._buildArgsAtLeastConfirmed(void 0!==t?[e,t]:[e],r),i=await this._rpcRequest("getBlocks",n),s=(0,g.vt)(i,it((0,g.YO)((0,g.ai)())));if("error"in s)throw new we(s.error,"failed to get blocks");return s.result}async getBlockSignatures(e,t){const r=this._buildArgsAtLeastConfirmed([e],t,void 0,{transactionDetails:"signatures",rewards:!1}),n=await this._rpcRequest("getBlock",r),i=(0,g.vt)(n,Tr);if("error"in i)throw new we(i.error,"failed to get block");const s=i.result;if(!s)throw new Error("Block "+e+" not found");return s}async getConfirmedBlockSignatures(e,t){const r=this._buildArgsAtLeastConfirmed([e],t,void 0,{transactionDetails:"signatures",rewards:!1}),n=await this._rpcRequest("getConfirmedBlock",r),i=(0,g.vt)(n,Tr);if("error"in i)throw new we(i.error,"failed to get confirmed block");const s=i.result;if(!s)throw new Error("Confirmed block "+e+" not found");return s}async getConfirmedTransaction(e,t){const r=this._buildArgsAtLeastConfirmed([e],t),n=await this._rpcRequest("getConfirmedTransaction",r),i=(0,g.vt)(n,Or);if("error"in i)throw new we(i.error,"failed to get transaction");const s=i.result;if(!s)return s;const o=new ee(s.transaction.message),a=s.transaction.signatures;return{...s,transaction:oe.populate(o,a)}}async getParsedConfirmedTransaction(e,t){const r=this._buildArgsAtLeastConfirmed([e],t,"jsonParsed"),n=await this._rpcRequest("getConfirmedTransaction",r),i=(0,g.vt)(n,Nr);if("error"in i)throw new we(i.error,"failed to get confirmed transaction");return i.result}async getParsedConfirmedTransactions(e,t){const r=e.map((e=>({methodName:"getConfirmedTransaction",args:this._buildArgsAtLeastConfirmed([e],t,"jsonParsed")})));return(await this._rpcBatchRequest(r)).map((e=>{const t=(0,g.vt)(e,Nr);if("error"in t)throw new we(t.error,"failed to get confirmed transactions");return t.result}))}async getConfirmedSignaturesForAddress(e,t,r){let n={},i=await this.getFirstAvailableBlock();for(;!("until"in n)&&!(--t<=0||t<i);)try{const e=await this.getConfirmedBlockSignatures(t,"finalized");e.signatures.length>0&&(n.until=e.signatures[e.signatures.length-1].toString())}catch(o){if(o instanceof Error&&o.message.includes("skipped"))continue;throw o}let s=await this.getSlot("finalized");for(;!("before"in n)&&!(++r>s);)try{const e=await this.getConfirmedBlockSignatures(r);e.signatures.length>0&&(n.before=e.signatures[e.signatures.length-1].toString())}catch(o){if(o instanceof Error&&o.message.includes("skipped"))continue;throw o}return(await this.getConfirmedSignaturesForAddress2(e,n)).map((e=>e.signature))}async getConfirmedSignaturesForAddress2(e,t,r){const n=this._buildArgsAtLeastConfirmed([e.toBase58()],r,void 0,t),i=await this._rpcRequest("getConfirmedSignaturesForAddress2",n),s=(0,g.vt)(i,jt);if("error"in s)throw new we(s.error,"failed to get confirmed signatures for address");return s.result}async getSignaturesForAddress(e,t,r){const n=this._buildArgsAtLeastConfirmed([e.toBase58()],r,void 0,t),i=await this._rpcRequest("getSignaturesForAddress",n),s=(0,g.vt)(i,Mt);if("error"in s)throw new we(s.error,"failed to get signatures for address");return s.result}async getAddressLookupTable(e,t){const{context:r,value:n}=await this.getAccountInfoAndContext(e,t);let i=null;return null!==n&&(i=new Fe({key:e,state:Fe.deserialize(n.data)})),{context:r,value:i}}async getNonceAndContext(e,t){const{context:r,value:n}=await this.getAccountInfoAndContext(e,t);let i=null;return null!==n&&(i=Be.fromAccountData(n.data)),{context:r,value:i}}async getNonce(e,t){return await this.getNonceAndContext(e,t).then((e=>e.value)).catch((t=>{throw new Error("failed to get nonce for account "+e.toBase58()+": "+t)}))}async requestAirdrop(e,t){const r=await this._rpcRequest("requestAirdrop",[e.toBase58(),t]),n=(0,g.vt)(r,Yr);if("error"in n)throw new we(n.error,"airdrop to ".concat(e.toBase58()," failed"));return n.result}async _blockhashWithExpiryBlockHeight(e){if(!e){for(;this._pollingBlockhash;)await Ie(100);const e=Date.now()-this._blockhashInfo.lastFetch>=$e;if(null!==this._blockhashInfo.latestBlockhash&&!e)return this._blockhashInfo.latestBlockhash}return await this._pollNewBlockhash()}async _pollNewBlockhash(){this._pollingBlockhash=!0;try{const e=Date.now(),t=this._blockhashInfo.latestBlockhash,r=t?t.blockhash:null;for(let n=0;n<50;n++){const e=await this.getLatestBlockhash("finalized");if(r!==e.blockhash)return this._blockhashInfo={latestBlockhash:e,lastFetch:Date.now(),transactionSignatures:[],simulatedSignatures:[]},e;await Ie(200)}throw new Error("Unable to obtain a new blockhash after ".concat(Date.now()-e,"ms"))}finally{this._pollingBlockhash=!1}}async getStakeMinimumDelegation(e){const{commitment:t,config:r}=et(e),n=this._buildArgs([],t,"base64",r),i=await this._rpcRequest("getStakeMinimumDelegation",n),s=(0,g.vt)(i,st((0,g.ai)()));if("error"in s)throw new we(s.error,"failed to get stake minimum delegation");return s.result}async simulateTransaction(e,t,r){if("message"in e){const i=e.serialize(),s=n.Buffer.from(i).toString("base64");if(Array.isArray(t)||void 0!==r)throw new Error("Invalid arguments");const o=t||{};o.encoding="base64","commitment"in o||(o.commitment=this.commitment),t&&"object"===typeof t&&"innerInstructions"in t&&(o.innerInstructions=t.innerInstructions);const a=[s,o],c=await this._rpcRequest("simulateTransaction",a),u=(0,g.vt)(c,St);if("error"in u)throw new Error("failed to simulate transaction: "+u.error.message);return u.result}let i;if(e instanceof oe){let t=e;i=new oe,i.feePayer=t.feePayer,i.instructions=e.instructions,i.nonceInfo=t.nonceInfo,i.signatures=t.signatures}else i=oe.populate(e),i._message=i._json=void 0;if(void 0!==t&&!Array.isArray(t))throw new Error("Invalid arguments");const s=t;if(i.nonceInfo&&s)i.sign(...s);else{let e=this._disableBlockhashCaching;for(;;){const t=await this._blockhashWithExpiryBlockHeight(e);if(i.lastValidBlockHeight=t.lastValidBlockHeight,i.recentBlockhash=t.blockhash,!s)break;if(i.sign(...s),!i.signature)throw new Error("!signature");const r=i.signature.toString("base64");if(!this._blockhashInfo.simulatedSignatures.includes(r)&&!this._blockhashInfo.transactionSignatures.includes(r)){this._blockhashInfo.simulatedSignatures.push(r);break}e=!0}}const o=i._compile(),a=o.serialize(),c=i._serialize(a).toString("base64"),u={encoding:"base64",commitment:this.commitment};if(r){const e=(Array.isArray(r)?r:o.nonProgramIds()).map((e=>e.toBase58()));u.accounts={encoding:"base64",addresses:e}}s&&(u.sigVerify=!0),t&&"object"===typeof t&&"innerInstructions"in t&&(u.innerInstructions=t.innerInstructions);const l=[c,u],d=await this._rpcRequest("simulateTransaction",l),h=(0,g.vt)(d,St);if("error"in h){let e;if("data"in h.error&&(e=h.error.data.logs,e&&Array.isArray(e))){const t="\n    ",r=t+e.join(t);console.error(h.error.message,r)}throw new fe({action:"simulate",signature:"",transactionMessage:h.error.message,logs:e})}return h.result}async sendTransaction(e,t,r){if("version"in e){if(t&&Array.isArray(t))throw new Error("Invalid arguments");const r=e.serialize();return await this.sendRawTransaction(r,t)}if(void 0===t||!Array.isArray(t))throw new Error("Invalid arguments");const n=t;if(e.nonceInfo)e.sign(...n);else{let t=this._disableBlockhashCaching;for(;;){const r=await this._blockhashWithExpiryBlockHeight(t);if(e.lastValidBlockHeight=r.lastValidBlockHeight,e.recentBlockhash=r.blockhash,e.sign(...n),!e.signature)throw new Error("!signature");const i=e.signature.toString("base64");if(!this._blockhashInfo.transactionSignatures.includes(i)){this._blockhashInfo.transactionSignatures.push(i);break}t=!0}}const i=e.serialize();return await this.sendRawTransaction(i,r)}async sendRawTransaction(e,t){const r=_(e).toString("base64");return await this.sendEncodedTransaction(r,t)}async sendEncodedTransaction(e,t){const r={encoding:"base64"},n=t&&t.skipPreflight,i=!0===n?"processed":t&&t.preflightCommitment||this.commitment;t&&null!=t.maxRetries&&(r.maxRetries=t.maxRetries),t&&null!=t.minContextSlot&&(r.minContextSlot=t.minContextSlot),n&&(r.skipPreflight=n),i&&(r.preflightCommitment=i);const s=[e,r],o=await this._rpcRequest("sendTransaction",s),a=(0,g.vt)(o,qr);if("error"in a){let e;throw"data"in a.error&&(e=a.error.data.logs),new fe({action:n?"send":"simulate",signature:"",transactionMessage:a.error.message,logs:e})}return a.result}_wsOnOpen(){this._rpcWebSocketConnected=!0,this._rpcWebSocketHeartbeat=setInterval((()=>{(async()=>{try{await this._rpcWebSocket.notify("ping")}catch{}})()}),5e3),this._updateSubscriptions()}_wsOnError(e){this._rpcWebSocketConnected=!1,console.error("ws error:",e.message)}_wsOnClose(e){this._rpcWebSocketConnected=!1,this._rpcWebSocketGeneration=(this._rpcWebSocketGeneration+1)%Number.MAX_SAFE_INTEGER,this._rpcWebSocketIdleTimeout&&(clearTimeout(this._rpcWebSocketIdleTimeout),this._rpcWebSocketIdleTimeout=null),this._rpcWebSocketHeartbeat&&(clearInterval(this._rpcWebSocketHeartbeat),this._rpcWebSocketHeartbeat=null),1e3!==e?(this._subscriptionCallbacksByServerSubscriptionId={},Object.entries(this._subscriptionsByHash).forEach((e=>{let[t,r]=e;this._setSubscription(t,{...r,state:"pending"})}))):this._updateSubscriptions()}_setSubscription(e,t){var r;const n=null===(r=this._subscriptionsByHash[e])||void 0===r?void 0:r.state;if(this._subscriptionsByHash[e]=t,n!==t.state){const r=this._subscriptionStateChangeCallbacksByHash[e];r&&r.forEach((e=>{try{e(t.state)}catch{}}))}}_onSubscriptionStateChange(e,t){var r;const n=this._subscriptionHashByClientSubscriptionId[e];if(null==n)return()=>{};const i=(r=this._subscriptionStateChangeCallbacksByHash)[n]||(r[n]=new Set);return i.add(t),()=>{i.delete(t),0===i.size&&delete this._subscriptionStateChangeCallbacksByHash[n]}}async _updateSubscriptions(){if(0===Object.keys(this._subscriptionsByHash).length)return void(this._rpcWebSocketConnected&&(this._rpcWebSocketConnected=!1,this._rpcWebSocketIdleTimeout=setTimeout((()=>{this._rpcWebSocketIdleTimeout=null;try{this._rpcWebSocket.close()}catch(e){e instanceof Error&&console.log("Error when closing socket connection: ".concat(e.message))}}),500)));if(null!==this._rpcWebSocketIdleTimeout&&(clearTimeout(this._rpcWebSocketIdleTimeout),this._rpcWebSocketIdleTimeout=null,this._rpcWebSocketConnected=!0),!this._rpcWebSocketConnected)return void this._rpcWebSocket.connect();const e=this._rpcWebSocketGeneration,t=()=>e===this._rpcWebSocketGeneration;await Promise.all(Object.keys(this._subscriptionsByHash).map((async e=>{const r=this._subscriptionsByHash[e];if(void 0!==r)switch(r.state){case"pending":case"unsubscribed":if(0===r.callbacks.size)return delete this._subscriptionsByHash[e],"unsubscribed"===r.state&&delete this._subscriptionCallbacksByServerSubscriptionId[r.serverSubscriptionId],void await this._updateSubscriptions();await(async()=>{const{args:n,method:i}=r;try{this._setSubscription(e,{...r,state:"subscribing"});const t=await this._rpcWebSocket.call(i,n);this._setSubscription(e,{...r,serverSubscriptionId:t,state:"subscribed"}),this._subscriptionCallbacksByServerSubscriptionId[t]=r.callbacks,await this._updateSubscriptions()}catch(s){if(s instanceof Error&&console.error("".concat(i," error for argument"),n,s.message),!t())return;this._setSubscription(e,{...r,state:"pending"}),await this._updateSubscriptions()}})();break;case"subscribed":0===r.callbacks.size&&await(async()=>{const{serverSubscriptionId:n,unsubscribeMethod:i}=r;if(this._subscriptionsAutoDisposedByRpc.has(n))this._subscriptionsAutoDisposedByRpc.delete(n);else{this._setSubscription(e,{...r,state:"unsubscribing"}),this._setSubscription(e,{...r,state:"unsubscribing"});try{await this._rpcWebSocket.call(i,[n])}catch(s){if(s instanceof Error&&console.error("".concat(i," error:"),s.message),!t())return;return this._setSubscription(e,{...r,state:"subscribed"}),void await this._updateSubscriptions()}}this._setSubscription(e,{...r,state:"unsubscribed"}),await this._updateSubscriptions()})()}})))}_handleServerNotification(e,t){const r=this._subscriptionCallbacksByServerSubscriptionId[e];void 0!==r&&r.forEach((e=>{try{e(...t)}catch(r){console.error(r)}}))}_wsOnAccountNotification(e){const{result:t,subscription:r}=(0,g.vt)(e,Ut);this._handleServerNotification(r,[t.value,t.context])}_makeSubscription(e,t){const r=this._nextClientSubscriptionId++,n=He([e.method,t]),i=this._subscriptionsByHash[n];return void 0===i?this._subscriptionsByHash[n]={...e,args:t,callbacks:new Set([e.callback]),state:"pending"}:i.callbacks.add(e.callback),this._subscriptionHashByClientSubscriptionId[r]=n,this._subscriptionDisposeFunctionsByClientSubscriptionId[r]=async()=>{delete this._subscriptionDisposeFunctionsByClientSubscriptionId[r],delete this._subscriptionHashByClientSubscriptionId[r];const t=this._subscriptionsByHash[n];G(void 0!==t,"Could not find a `Subscription` when tearing down client subscription #".concat(r)),t.callbacks.delete(e.callback),await this._updateSubscriptions()},this._updateSubscriptions(),r}onAccountChange(e,t,r){const{commitment:n,config:i}=et(r),s=this._buildArgs([e.toBase58()],n||this._commitment||"finalized","base64",i);return this._makeSubscription({callback:t,method:"accountSubscribe",unsubscribeMethod:"accountUnsubscribe"},s)}async removeAccountChangeListener(e){await this._unsubscribeClientSubscription(e,"account change")}_wsOnProgramAccountNotification(e){const{result:t,subscription:r}=(0,g.vt)(e,Ft);this._handleServerNotification(r,[{accountId:t.value.pubkey,accountInfo:t.value.account},t.context])}onProgramAccountChange(e,t,r,n){const{commitment:i,config:s}=et(r),o=this._buildArgs([e.toBase58()],i||this._commitment||"finalized","base64",s||(n?{filters:tt(n)}:void 0));return this._makeSubscription({callback:t,method:"programSubscribe",unsubscribeMethod:"programUnsubscribe"},o)}async removeProgramAccountChangeListener(e){await this._unsubscribeClientSubscription(e,"program account change")}onLogs(e,t,r){const n=this._buildArgs(["object"===typeof e?{mentions:[e.toString()]}:e],r||this._commitment||"finalized");return this._makeSubscription({callback:t,method:"logsSubscribe",unsubscribeMethod:"logsUnsubscribe"},n)}async removeOnLogsListener(e){await this._unsubscribeClientSubscription(e,"logs")}_wsOnLogsNotification(e){const{result:t,subscription:r}=(0,g.vt)(e,Hr);this._handleServerNotification(r,[t.value,t.context])}_wsOnSlotNotification(e){const{result:t,subscription:r}=(0,g.vt)(e,Gt);this._handleServerNotification(r,[t])}onSlotChange(e){return this._makeSubscription({callback:e,method:"slotSubscribe",unsubscribeMethod:"slotUnsubscribe"},[])}async removeSlotChangeListener(e){await this._unsubscribeClientSubscription(e,"slot change")}_wsOnSlotUpdatesNotification(e){const{result:t,subscription:r}=(0,g.vt)(e,Zt);this._handleServerNotification(r,[t])}onSlotUpdate(e){return this._makeSubscription({callback:e,method:"slotsUpdatesSubscribe",unsubscribeMethod:"slotsUpdatesUnsubscribe"},[])}async removeSlotUpdateListener(e){await this._unsubscribeClientSubscription(e,"slot update")}async _unsubscribeClientSubscription(e,t){const r=this._subscriptionDisposeFunctionsByClientSubscriptionId[e];r?await r():console.warn("Ignored unsubscribe request because an active subscription with id "+"`".concat(e,"` for '").concat(t,"' events ")+"could not be found.")}_buildArgs(e,t,r,n){const i=t||this._commitment;if(i||r||n){let t={};r&&(t.encoding=r),i&&(t.commitment=i),n&&(t=Object.assign(t,n)),e.push(t)}return e}_buildArgsAtLeastConfirmed(e,t,r,n){const i=t||this._commitment;if(i&&!["confirmed","finalized"].includes(i))throw new Error("Using Connection with default commitment: `"+this._commitment+"`, but method requires at least `confirmed`");return this._buildArgs(e,t,r,n)}_wsOnSignatureNotification(e){const{result:t,subscription:r}=(0,g.vt)(e,Qt);"receivedSignature"!==t.value&&this._subscriptionsAutoDisposedByRpc.add(r),this._handleServerNotification(r,"receivedSignature"===t.value?[{type:"received"},t.context]:[{type:"status",result:t.value},t.context])}onSignature(e,t,r){const n=this._buildArgs([e],r||this._commitment||"finalized"),i=this._makeSubscription({callback:(e,r)=>{if("status"===e.type){t(e.result,r);try{this.removeSignatureListener(i)}catch(n){}}},method:"signatureSubscribe",unsubscribeMethod:"signatureUnsubscribe"},n);return i}onSignatureWithOptions(e,t,r){const{commitment:n,...i}={...r,commitment:r&&r.commitment||this._commitment||"finalized"},s=this._buildArgs([e],n,void 0,i),o=this._makeSubscription({callback:(e,r)=>{t(e,r);try{this.removeSignatureListener(o)}catch(n){}},method:"signatureSubscribe",unsubscribeMethod:"signatureUnsubscribe"},s);return o}async removeSignatureListener(e){await this._unsubscribeClientSubscription(e,"signature result")}_wsOnRootNotification(e){const{result:t,subscription:r}=(0,g.vt)(e,$t);this._handleServerNotification(r,[t])}onRootChange(e){return this._makeSubscription({callback:e,method:"rootSubscribe",unsubscribeMethod:"rootUnsubscribe"},[])}async removeRootChangeListener(e){await this._unsubscribeClientSubscription(e,"root change")}}class Ur{constructor(e){this._keypair=void 0,this._keypair=null!==e&&void 0!==e?e:w()}static generate(){return new Ur(w())}static fromSecretKey(e,t){if(64!==e.byteLength)throw new Error("bad secret key size");const r=e.slice(32,64);if(!t||!t.skipValidation){const t=e.slice(0,32),n=S(t);for(let e=0;e<32;e++)if(r[e]!==n[e])throw new Error("provided secretKey is invalid")}return new Ur({publicKey:r,secretKey:e})}static fromSeed(e){const t=S(e),r=new Uint8Array(64);return r.set(e),r.set(t,32),new Ur({publicKey:t,secretKey:r})}get publicKey(){return new R(this._keypair.publicKey)}get secretKey(){return new Uint8Array(this._keypair.secretKey)}}const Vr=Object.freeze({CreateLookupTable:{index:0,layout:d.w3([d.DH("instruction"),We("recentSlot"),d.u8("bumpSeed")])},FreezeLookupTable:{index:1,layout:d.w3([d.DH("instruction")])},ExtendLookupTable:{index:2,layout:d.w3([d.DH("instruction"),We(),d.O6(j(),d.cY(d.DH(),-8),"addresses")])},DeactivateLookupTable:{index:3,layout:d.w3([d.DH("instruction")])},CloseLookupTable:{index:4,layout:d.w3([d.DH("instruction")])}});class Fr{constructor(){}static decodeInstructionType(e){this.checkProgramId(e.programId);const t=d.DH("instruction").decode(e.data);let r;for(const[n,i]of Object.entries(Vr))if(i.index==t){r=n;break}if(!r)throw new Error("Invalid Instruction. Should be a LookupTable Instruction");return r}static decodeCreateLookupTable(e){this.checkProgramId(e.programId),this.checkKeysLength(e.keys,4);const{recentSlot:t}=Ae(Vr.CreateLookupTable,e.data);return{authority:e.keys[1].pubkey,payer:e.keys[2].pubkey,recentSlot:Number(t)}}static decodeExtendLookupTable(e){if(this.checkProgramId(e.programId),e.keys.length<2)throw new Error("invalid instruction; found ".concat(e.keys.length," keys, expected at least 2"));const{addresses:t}=Ae(Vr.ExtendLookupTable,e.data);return{lookupTable:e.keys[0].pubkey,authority:e.keys[1].pubkey,payer:e.keys.length>2?e.keys[2].pubkey:void 0,addresses:t.map((e=>new R(e)))}}static decodeCloseLookupTable(e){return this.checkProgramId(e.programId),this.checkKeysLength(e.keys,3),{lookupTable:e.keys[0].pubkey,authority:e.keys[1].pubkey,recipient:e.keys[2].pubkey}}static decodeFreezeLookupTable(e){return this.checkProgramId(e.programId),this.checkKeysLength(e.keys,2),{lookupTable:e.keys[0].pubkey,authority:e.keys[1].pubkey}}static decodeDeactivateLookupTable(e){return this.checkProgramId(e.programId),this.checkKeysLength(e.keys,2),{lookupTable:e.keys[0].pubkey,authority:e.keys[1].pubkey}}static checkProgramId(e){if(!e.equals(Jr.programId))throw new Error("invalid instruction; programId is not AddressLookupTable Program")}static checkKeysLength(e,t){if(e.length<t)throw new Error("invalid instruction; found ".concat(e.length," keys, expected at least ").concat(t))}}class Jr{constructor(){}static createLookupTable(e){const[t,r]=R.findProgramAddressSync([e.authority.toBuffer(),(0,h.Bq)(BigInt(e.recentSlot),8)],this.programId),n=ve(Vr.CreateLookupTable,{recentSlot:BigInt(e.recentSlot),bumpSeed:r}),i=[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:e.authority,isSigner:!0,isWritable:!1},{pubkey:e.payer,isSigner:!0,isWritable:!0},{pubkey:Re.programId,isSigner:!1,isWritable:!1}];return[new se({programId:this.programId,keys:i,data:n}),t]}static freezeLookupTable(e){const t=ve(Vr.FreezeLookupTable),r=[{pubkey:e.lookupTable,isSigner:!1,isWritable:!0},{pubkey:e.authority,isSigner:!0,isWritable:!1}];return new se({programId:this.programId,keys:r,data:t})}static extendLookupTable(e){const t=ve(Vr.ExtendLookupTable,{addresses:e.addresses.map((e=>e.toBytes()))}),r=[{pubkey:e.lookupTable,isSigner:!1,isWritable:!0},{pubkey:e.authority,isSigner:!0,isWritable:!1}];return e.payer&&r.push({pubkey:e.payer,isSigner:!0,isWritable:!0},{pubkey:Re.programId,isSigner:!1,isWritable:!1}),new se({programId:this.programId,keys:r,data:t})}static deactivateLookupTable(e){const t=ve(Vr.DeactivateLookupTable),r=[{pubkey:e.lookupTable,isSigner:!1,isWritable:!0},{pubkey:e.authority,isSigner:!0,isWritable:!1}];return new se({programId:this.programId,keys:r,data:t})}static closeLookupTable(e){const t=ve(Vr.CloseLookupTable),r=[{pubkey:e.lookupTable,isSigner:!1,isWritable:!0},{pubkey:e.authority,isSigner:!0,isWritable:!1},{pubkey:e.recipient,isSigner:!1,isWritable:!0}];return new se({programId:this.programId,keys:r,data:t})}}Jr.programId=new R("AddressLookupTab1e1111111111111111111111111");class Gr{constructor(){}static decodeInstructionType(e){this.checkProgramId(e.programId);const t=d.u8("instruction").decode(e.data);let r;for(const[n,i]of Object.entries(Xr))if(i.index==t){r=n;break}if(!r)throw new Error("Instruction type incorrect; not a ComputeBudgetInstruction");return r}static decodeRequestUnits(e){this.checkProgramId(e.programId);const{units:t,additionalFee:r}=Ae(Xr.RequestUnits,e.data);return{units:t,additionalFee:r}}static decodeRequestHeapFrame(e){this.checkProgramId(e.programId);const{bytes:t}=Ae(Xr.RequestHeapFrame,e.data);return{bytes:t}}static decodeSetComputeUnitLimit(e){this.checkProgramId(e.programId);const{units:t}=Ae(Xr.SetComputeUnitLimit,e.data);return{units:t}}static decodeSetComputeUnitPrice(e){this.checkProgramId(e.programId);const{microLamports:t}=Ae(Xr.SetComputeUnitPrice,e.data);return{microLamports:t}}static checkProgramId(e){if(!e.equals(Zr.programId))throw new Error("invalid instruction; programId is not ComputeBudgetProgram")}}const Xr=Object.freeze({RequestUnits:{index:0,layout:d.w3([d.u8("instruction"),d.DH("units"),d.DH("additionalFee")])},RequestHeapFrame:{index:1,layout:d.w3([d.u8("instruction"),d.DH("bytes")])},SetComputeUnitLimit:{index:2,layout:d.w3([d.u8("instruction"),d.DH("units")])},SetComputeUnitPrice:{index:3,layout:d.w3([d.u8("instruction"),We("microLamports")])}});class Zr{constructor(){}static requestUnits(e){const t=ve(Xr.RequestUnits,e);return new se({keys:[],programId:this.programId,data:t})}static requestHeapFrame(e){const t=ve(Xr.RequestHeapFrame,e);return new se({keys:[],programId:this.programId,data:t})}static setComputeUnitLimit(e){const t=ve(Xr.SetComputeUnitLimit,e);return new se({keys:[],programId:this.programId,data:t})}static setComputeUnitPrice(e){const t=ve(Xr.SetComputeUnitPrice,{microLamports:BigInt(e.microLamports)});return new se({keys:[],programId:this.programId,data:t})}}Zr.programId=new R("ComputeBudget111111111111111111111111111111");const Qr=d.w3([d.u8("numSignatures"),d.u8("padding"),d.NX("signatureOffset"),d.NX("signatureInstructionIndex"),d.NX("publicKeyOffset"),d.NX("publicKeyInstructionIndex"),d.NX("messageDataOffset"),d.NX("messageDataSize"),d.NX("messageInstructionIndex")]);class $r{constructor(){}static createInstructionWithPublicKey(e){const{publicKey:t,message:r,signature:i,instructionIndex:s}=e;G(32===t.length,"Public Key must be ".concat(32," bytes but received ").concat(t.length," bytes")),G(64===i.length,"Signature must be ".concat(64," bytes but received ").concat(i.length," bytes"));const o=Qr.span,a=o+t.length,c=a+i.length,u=n.Buffer.alloc(c+r.length),l=null==s?65535:s;return Qr.encode({numSignatures:1,padding:0,signatureOffset:a,signatureInstructionIndex:l,publicKeyOffset:o,publicKeyInstructionIndex:l,messageDataOffset:c,messageDataSize:r.length,messageInstructionIndex:l},u),u.fill(t,o),u.fill(i,a),u.fill(r,c),new se({keys:[],programId:$r.programId,data:u})}static createInstructionWithPrivateKey(e){const{privateKey:t,message:r,instructionIndex:n}=e;G(64===t.length,"Private key must be ".concat(64," bytes but received ").concat(t.length," bytes"));try{const e=Ur.fromSecretKey(t),i=e.publicKey.toBytes(),s=v(r,e.secretKey);return this.createInstructionWithPublicKey({publicKey:i,message:r,signature:s,instructionIndex:n})}catch(i){throw new Error("Error creating instruction; ".concat(i))}}}$r.programId=new R("Ed25519SigVerify111111111111111111111111111");f.bI.utils.isValidPrivateKey;const en=f.bI.getPublicKey,tn=d.w3([d.u8("numSignatures"),d.NX("signatureOffset"),d.u8("signatureInstructionIndex"),d.NX("ethAddressOffset"),d.u8("ethAddressInstructionIndex"),d.NX("messageDataOffset"),d.NX("messageDataSize"),d.u8("messageInstructionIndex"),d.av(20,"ethAddress"),d.av(64,"signature"),d.u8("recoveryId")]);class rn{constructor(){}static publicKeyToEthAddress(e){G(64===e.length,"Public key must be ".concat(64," bytes but received ").concat(e.length," bytes"));try{return n.Buffer.from((0,b.lY)(_(e))).slice(-20)}catch(t){throw new Error("Error constructing Ethereum address: ".concat(t))}}static createInstructionWithPublicKey(e){const{publicKey:t,message:r,signature:n,recoveryId:i,instructionIndex:s}=e;return rn.createInstructionWithEthAddress({ethAddress:rn.publicKeyToEthAddress(t),message:r,signature:n,recoveryId:i,instructionIndex:s})}static createInstructionWithEthAddress(e){const{ethAddress:t,message:r,signature:i,recoveryId:s,instructionIndex:o=0}=e;let a;a="string"===typeof t?t.startsWith("0x")?n.Buffer.from(t.substr(2),"hex"):n.Buffer.from(t,"hex"):t,G(20===a.length,"Address must be ".concat(20," bytes but received ").concat(a.length," bytes"));const c=12+a.length,u=c+i.length+1,l=n.Buffer.alloc(tn.span+r.length);return tn.encode({numSignatures:1,signatureOffset:c,signatureInstructionIndex:o,ethAddressOffset:12,ethAddressInstructionIndex:o,messageDataOffset:u,messageDataSize:r.length,messageInstructionIndex:o,signature:_(i),ethAddress:_(a),recoveryId:s},l),l.fill(_(r),tn.span),new se({keys:[],programId:rn.programId,data:l})}static createInstructionWithPrivateKey(e){const{privateKey:t,message:r,instructionIndex:i}=e;G(32===t.length,"Private key must be ".concat(32," bytes but received ").concat(t.length," bytes"));try{const e=_(t),s=en(e,!1).slice(1),o=n.Buffer.from((0,b.lY)(_(r))),[a,c]=((e,t)=>{const r=f.bI.sign(e,t);return[r.toCompactRawBytes(),r.recovery]})(o,e);return this.createInstructionWithPublicKey({publicKey:s,message:r,signature:a,recoveryId:c,instructionIndex:i})}catch(s){throw new Error("Error creating instruction; ".concat(s))}}}var nn;rn.programId=new R("KeccakSecp256k11111111111111111111111111111");const sn=new R("StakeConfig11111111111111111111111111111111");class on{constructor(e,t){this.staker=void 0,this.withdrawer=void 0,this.staker=e,this.withdrawer=t}}class an{constructor(e,t,r){this.unixTimestamp=void 0,this.epoch=void 0,this.custodian=void 0,this.unixTimestamp=e,this.epoch=t,this.custodian=r}}nn=an,an.default=new nn(0,0,R.default);class cn{constructor(){}static decodeInstructionType(e){this.checkProgramId(e.programId);const t=d.DH("instruction").decode(e.data);let r;for(const[n,i]of Object.entries(un))if(i.index==t){r=n;break}if(!r)throw new Error("Instruction type incorrect; not a StakeInstruction");return r}static decodeInitialize(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,2);const{authorized:t,lockup:r}=Ae(un.Initialize,e.data);return{stakePubkey:e.keys[0].pubkey,authorized:new on(new R(t.staker),new R(t.withdrawer)),lockup:new an(r.unixTimestamp,r.epoch,new R(r.custodian))}}static decodeDelegate(e){return this.checkProgramId(e.programId),this.checkKeyLength(e.keys,6),Ae(un.Delegate,e.data),{stakePubkey:e.keys[0].pubkey,votePubkey:e.keys[1].pubkey,authorizedPubkey:e.keys[5].pubkey}}static decodeAuthorize(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,3);const{newAuthorized:t,stakeAuthorizationType:r}=Ae(un.Authorize,e.data),n={stakePubkey:e.keys[0].pubkey,authorizedPubkey:e.keys[2].pubkey,newAuthorizedPubkey:new R(t),stakeAuthorizationType:{index:r}};return e.keys.length>3&&(n.custodianPubkey=e.keys[3].pubkey),n}static decodeAuthorizeWithSeed(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,2);const{newAuthorized:t,stakeAuthorizationType:r,authoritySeed:n,authorityOwner:i}=Ae(un.AuthorizeWithSeed,e.data),s={stakePubkey:e.keys[0].pubkey,authorityBase:e.keys[1].pubkey,authoritySeed:n,authorityOwner:new R(i),newAuthorizedPubkey:new R(t),stakeAuthorizationType:{index:r}};return e.keys.length>3&&(s.custodianPubkey=e.keys[3].pubkey),s}static decodeSplit(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,3);const{lamports:t}=Ae(un.Split,e.data);return{stakePubkey:e.keys[0].pubkey,splitStakePubkey:e.keys[1].pubkey,authorizedPubkey:e.keys[2].pubkey,lamports:t}}static decodeMerge(e){return this.checkProgramId(e.programId),this.checkKeyLength(e.keys,3),Ae(un.Merge,e.data),{stakePubkey:e.keys[0].pubkey,sourceStakePubKey:e.keys[1].pubkey,authorizedPubkey:e.keys[4].pubkey}}static decodeWithdraw(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,5);const{lamports:t}=Ae(un.Withdraw,e.data),r={stakePubkey:e.keys[0].pubkey,toPubkey:e.keys[1].pubkey,authorizedPubkey:e.keys[4].pubkey,lamports:t};return e.keys.length>5&&(r.custodianPubkey=e.keys[5].pubkey),r}static decodeDeactivate(e){return this.checkProgramId(e.programId),this.checkKeyLength(e.keys,3),Ae(un.Deactivate,e.data),{stakePubkey:e.keys[0].pubkey,authorizedPubkey:e.keys[2].pubkey}}static checkProgramId(e){if(!e.equals(dn.programId))throw new Error("invalid instruction; programId is not StakeProgram")}static checkKeyLength(e,t){if(e.length<t)throw new Error("invalid instruction; found ".concat(e.length," keys, expected at least ").concat(t))}}const un=Object.freeze({Initialize:{index:0,layout:d.w3([d.DH("instruction"),function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"authorized";return d.w3([j("staker"),j("withdrawer")],e)}(),function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"lockup";return d.w3([d.Wg("unixTimestamp"),d.Wg("epoch"),j("custodian")],e)}()])},Authorize:{index:1,layout:d.w3([d.DH("instruction"),j("newAuthorized"),d.DH("stakeAuthorizationType")])},Delegate:{index:2,layout:d.w3([d.DH("instruction")])},Split:{index:3,layout:d.w3([d.DH("instruction"),d.Wg("lamports")])},Withdraw:{index:4,layout:d.w3([d.DH("instruction"),d.Wg("lamports")])},Deactivate:{index:5,layout:d.w3([d.DH("instruction")])},Merge:{index:7,layout:d.w3([d.DH("instruction")])},AuthorizeWithSeed:{index:8,layout:d.w3([d.DH("instruction"),j("newAuthorized"),d.DH("stakeAuthorizationType"),U("authoritySeed"),j("authorityOwner")])}}),ln=Object.freeze({Staker:{index:0},Withdrawer:{index:1}});class dn{constructor(){}static initialize(e){const{stakePubkey:t,authorized:r,lockup:n}=e,i=n||an.default,s=ve(un.Initialize,{authorized:{staker:_(r.staker.toBuffer()),withdrawer:_(r.withdrawer.toBuffer())},lockup:{unixTimestamp:i.unixTimestamp,epoch:i.epoch,custodian:_(i.custodian.toBuffer())}}),o={keys:[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:ge,isSigner:!1,isWritable:!1}],programId:this.programId,data:s};return new se(o)}static createAccountWithSeed(e){const t=new oe;t.add(Re.createAccountWithSeed({fromPubkey:e.fromPubkey,newAccountPubkey:e.stakePubkey,basePubkey:e.basePubkey,seed:e.seed,lamports:e.lamports,space:this.space,programId:this.programId}));const{stakePubkey:r,authorized:n,lockup:i}=e;return t.add(this.initialize({stakePubkey:r,authorized:n,lockup:i}))}static createAccount(e){const t=new oe;t.add(Re.createAccount({fromPubkey:e.fromPubkey,newAccountPubkey:e.stakePubkey,lamports:e.lamports,space:this.space,programId:this.programId}));const{stakePubkey:r,authorized:n,lockup:i}=e;return t.add(this.initialize({stakePubkey:r,authorized:n,lockup:i}))}static delegate(e){const{stakePubkey:t,authorizedPubkey:r,votePubkey:n}=e,i=ve(un.Delegate);return(new oe).add({keys:[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:n,isSigner:!1,isWritable:!1},{pubkey:ue,isSigner:!1,isWritable:!1},{pubkey:be,isSigner:!1,isWritable:!1},{pubkey:sn,isSigner:!1,isWritable:!1},{pubkey:r,isSigner:!0,isWritable:!1}],programId:this.programId,data:i})}static authorize(e){const{stakePubkey:t,authorizedPubkey:r,newAuthorizedPubkey:n,stakeAuthorizationType:i,custodianPubkey:s}=e,o=ve(un.Authorize,{newAuthorized:_(n.toBuffer()),stakeAuthorizationType:i.index}),a=[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:ue,isSigner:!1,isWritable:!0},{pubkey:r,isSigner:!0,isWritable:!1}];return s&&a.push({pubkey:s,isSigner:!0,isWritable:!1}),(new oe).add({keys:a,programId:this.programId,data:o})}static authorizeWithSeed(e){const{stakePubkey:t,authorityBase:r,authoritySeed:n,authorityOwner:i,newAuthorizedPubkey:s,stakeAuthorizationType:o,custodianPubkey:a}=e,c=ve(un.AuthorizeWithSeed,{newAuthorized:_(s.toBuffer()),stakeAuthorizationType:o.index,authoritySeed:n,authorityOwner:_(i.toBuffer())}),u=[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:r,isSigner:!0,isWritable:!1},{pubkey:ue,isSigner:!1,isWritable:!1}];return a&&u.push({pubkey:a,isSigner:!0,isWritable:!1}),(new oe).add({keys:u,programId:this.programId,data:c})}static splitInstruction(e){const{stakePubkey:t,authorizedPubkey:r,splitStakePubkey:n,lamports:i}=e,s=ve(un.Split,{lamports:i});return new se({keys:[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:n,isSigner:!1,isWritable:!0},{pubkey:r,isSigner:!0,isWritable:!1}],programId:this.programId,data:s})}static split(e,t){const r=new oe;return r.add(Re.createAccount({fromPubkey:e.authorizedPubkey,newAccountPubkey:e.splitStakePubkey,lamports:t,space:this.space,programId:this.programId})),r.add(this.splitInstruction(e))}static splitWithSeed(e,t){const{stakePubkey:r,authorizedPubkey:n,splitStakePubkey:i,basePubkey:s,seed:o,lamports:a}=e,c=new oe;return c.add(Re.allocate({accountPubkey:i,basePubkey:s,seed:o,space:this.space,programId:this.programId})),t&&t>0&&c.add(Re.transfer({fromPubkey:e.authorizedPubkey,toPubkey:i,lamports:t})),c.add(this.splitInstruction({stakePubkey:r,authorizedPubkey:n,splitStakePubkey:i,lamports:a}))}static merge(e){const{stakePubkey:t,sourceStakePubKey:r,authorizedPubkey:n}=e,i=ve(un.Merge);return(new oe).add({keys:[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:r,isSigner:!1,isWritable:!0},{pubkey:ue,isSigner:!1,isWritable:!1},{pubkey:be,isSigner:!1,isWritable:!1},{pubkey:n,isSigner:!0,isWritable:!1}],programId:this.programId,data:i})}static withdraw(e){const{stakePubkey:t,authorizedPubkey:r,toPubkey:n,lamports:i,custodianPubkey:s}=e,o=ve(un.Withdraw,{lamports:i}),a=[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:n,isSigner:!1,isWritable:!0},{pubkey:ue,isSigner:!1,isWritable:!1},{pubkey:be,isSigner:!1,isWritable:!1},{pubkey:r,isSigner:!0,isWritable:!1}];return s&&a.push({pubkey:s,isSigner:!0,isWritable:!1}),(new oe).add({keys:a,programId:this.programId,data:o})}static deactivate(e){const{stakePubkey:t,authorizedPubkey:r}=e,n=ve(un.Deactivate);return(new oe).add({keys:[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:ue,isSigner:!1,isWritable:!1},{pubkey:r,isSigner:!0,isWritable:!1}],programId:this.programId,data:n})}}dn.programId=new R("Stake11111111111111111111111111111111111111"),dn.space=200;class hn{constructor(e,t,r,n){this.nodePubkey=void 0,this.authorizedVoter=void 0,this.authorizedWithdrawer=void 0,this.commission=void 0,this.nodePubkey=e,this.authorizedVoter=t,this.authorizedWithdrawer=r,this.commission=n}}class gn{constructor(){}static decodeInstructionType(e){this.checkProgramId(e.programId);const t=d.DH("instruction").decode(e.data);let r;for(const[n,i]of Object.entries(pn))if(i.index==t){r=n;break}if(!r)throw new Error("Instruction type incorrect; not a VoteInstruction");return r}static decodeInitializeAccount(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,4);const{voteInit:t}=Ae(pn.InitializeAccount,e.data);return{votePubkey:e.keys[0].pubkey,nodePubkey:e.keys[3].pubkey,voteInit:new hn(new R(t.nodePubkey),new R(t.authorizedVoter),new R(t.authorizedWithdrawer),t.commission)}}static decodeAuthorize(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,3);const{newAuthorized:t,voteAuthorizationType:r}=Ae(pn.Authorize,e.data);return{votePubkey:e.keys[0].pubkey,authorizedPubkey:e.keys[2].pubkey,newAuthorizedPubkey:new R(t),voteAuthorizationType:{index:r}}}static decodeAuthorizeWithSeed(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,3);const{voteAuthorizeWithSeedArgs:{currentAuthorityDerivedKeyOwnerPubkey:t,currentAuthorityDerivedKeySeed:r,newAuthorized:n,voteAuthorizationType:i}}=Ae(pn.AuthorizeWithSeed,e.data);return{currentAuthorityDerivedKeyBasePubkey:e.keys[2].pubkey,currentAuthorityDerivedKeyOwnerPubkey:new R(t),currentAuthorityDerivedKeySeed:r,newAuthorizedPubkey:new R(n),voteAuthorizationType:{index:i},votePubkey:e.keys[0].pubkey}}static decodeWithdraw(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,3);const{lamports:t}=Ae(pn.Withdraw,e.data);return{votePubkey:e.keys[0].pubkey,authorizedWithdrawerPubkey:e.keys[2].pubkey,lamports:t,toPubkey:e.keys[1].pubkey}}static checkProgramId(e){if(!e.equals(yn.programId))throw new Error("invalid instruction; programId is not VoteProgram")}static checkKeyLength(e,t){if(e.length<t)throw new Error("invalid instruction; found ".concat(e.length," keys, expected at least ").concat(t))}}const pn=Object.freeze({InitializeAccount:{index:0,layout:d.w3([d.DH("instruction"),function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"voteInit";return d.w3([j("nodePubkey"),j("authorizedVoter"),j("authorizedWithdrawer"),d.u8("commission")],e)}()])},Authorize:{index:1,layout:d.w3([d.DH("instruction"),j("newAuthorized"),d.DH("voteAuthorizationType")])},Withdraw:{index:3,layout:d.w3([d.DH("instruction"),d.Wg("lamports")])},UpdateValidatorIdentity:{index:4,layout:d.w3([d.DH("instruction")])},AuthorizeWithSeed:{index:10,layout:d.w3([d.DH("instruction"),function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"voteAuthorizeWithSeedArgs";return d.w3([d.DH("voteAuthorizationType"),j("currentAuthorityDerivedKeyOwnerPubkey"),U("currentAuthorityDerivedKeySeed"),j("newAuthorized")],e)}()])}}),mn=Object.freeze({Voter:{index:0},Withdrawer:{index:1}});class yn{constructor(){}static initializeAccount(e){const{votePubkey:t,nodePubkey:r,voteInit:n}=e,i=ve(pn.InitializeAccount,{voteInit:{nodePubkey:_(n.nodePubkey.toBuffer()),authorizedVoter:_(n.authorizedVoter.toBuffer()),authorizedWithdrawer:_(n.authorizedWithdrawer.toBuffer()),commission:n.commission}}),s={keys:[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:ge,isSigner:!1,isWritable:!1},{pubkey:ue,isSigner:!1,isWritable:!1},{pubkey:r,isSigner:!0,isWritable:!1}],programId:this.programId,data:i};return new se(s)}static createAccount(e){const t=new oe;return t.add(Re.createAccount({fromPubkey:e.fromPubkey,newAccountPubkey:e.votePubkey,lamports:e.lamports,space:this.space,programId:this.programId})),t.add(this.initializeAccount({votePubkey:e.votePubkey,nodePubkey:e.voteInit.nodePubkey,voteInit:e.voteInit}))}static authorize(e){const{votePubkey:t,authorizedPubkey:r,newAuthorizedPubkey:n,voteAuthorizationType:i}=e,s=ve(pn.Authorize,{newAuthorized:_(n.toBuffer()),voteAuthorizationType:i.index}),o=[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:ue,isSigner:!1,isWritable:!1},{pubkey:r,isSigner:!0,isWritable:!1}];return(new oe).add({keys:o,programId:this.programId,data:s})}static authorizeWithSeed(e){const{currentAuthorityDerivedKeyBasePubkey:t,currentAuthorityDerivedKeyOwnerPubkey:r,currentAuthorityDerivedKeySeed:n,newAuthorizedPubkey:i,voteAuthorizationType:s,votePubkey:o}=e,a=ve(pn.AuthorizeWithSeed,{voteAuthorizeWithSeedArgs:{currentAuthorityDerivedKeyOwnerPubkey:_(r.toBuffer()),currentAuthorityDerivedKeySeed:n,newAuthorized:_(i.toBuffer()),voteAuthorizationType:s.index}}),c=[{pubkey:o,isSigner:!1,isWritable:!0},{pubkey:ue,isSigner:!1,isWritable:!1},{pubkey:t,isSigner:!0,isWritable:!1}];return(new oe).add({keys:c,programId:this.programId,data:a})}static withdraw(e){const{votePubkey:t,authorizedWithdrawerPubkey:r,lamports:n,toPubkey:i}=e,s=ve(pn.Withdraw,{lamports:n}),o=[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:i,isSigner:!1,isWritable:!0},{pubkey:r,isSigner:!0,isWritable:!1}];return(new oe).add({keys:o,programId:this.programId,data:s})}static safeWithdraw(e,t,r){if(e.lamports>t-r)throw new Error("Withdraw will leave vote account with insufficient funds.");return yn.withdraw(e)}static updateValidatorIdentity(e){const{votePubkey:t,authorizedWithdrawerPubkey:r,nodePubkey:n}=e,i=ve(pn.UpdateValidatorIdentity),s=[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:n,isSigner:!0,isWritable:!1},{pubkey:r,isSigner:!0,isWritable:!1}];return(new oe).add({keys:s,programId:this.programId,data:i})}}yn.programId=new R("Vote111111111111111111111111111111111111111"),yn.space=3762;const bn=new R("Va1idator1nfo111111111111111111111111111111"),fn=(0,g.NW)({name:(0,g.Yj)(),website:(0,g.lq)((0,g.Yj)()),details:(0,g.lq)((0,g.Yj)()),iconUrl:(0,g.lq)((0,g.Yj)()),keybaseUsername:(0,g.lq)((0,g.Yj)())});class kn{constructor(e,t){this.key=void 0,this.info=void 0,this.key=e,this.info=t}static fromConfigData(e){let t=[...e];if(2!==F(t))return null;const r=[];for(let n=0;n<2;n++){const e=new R($(t,0,O)),n=1===Q(t);r.push({publicKey:e,isSigner:n})}if(r[0].publicKey.equals(bn)&&r[1].isSigner){const e=U().decode(n.Buffer.from(t)),i=JSON.parse(e);return(0,g.vA)(i,fn),new kn(r[1].publicKey,i)}return null}}const wn=new R("Vote111111111111111111111111111111111111111"),Sn=d.w3([j("nodePubkey"),j("authorizedWithdrawer"),d.u8("commission"),d.I0(),d.O6(d.w3([d.I0("slot"),d.DH("confirmationCount")]),d.cY(d.DH(),-8),"votes"),d.u8("rootSlotValid"),d.I0("rootSlot"),d.I0(),d.O6(d.w3([d.I0("epoch"),j("authorizedVoter")]),d.cY(d.DH(),-8),"authorizedVoters"),d.w3([d.O6(d.w3([j("authorizedPubkey"),d.I0("epochOfLastAuthorizedSwitch"),d.I0("targetEpoch")]),32,"buf"),d.I0("idx"),d.u8("isEmpty")],"priorVoters"),d.I0(),d.O6(d.w3([d.I0("epoch"),d.I0("credits"),d.I0("prevCredits")]),d.cY(d.DH(),-8),"epochCredits"),d.w3([d.I0("slot"),d.I0("timestamp")],"lastTimestamp")]);class In{constructor(e){this.nodePubkey=void 0,this.authorizedWithdrawer=void 0,this.commission=void 0,this.rootSlot=void 0,this.votes=void 0,this.authorizedVoters=void 0,this.priorVoters=void 0,this.epochCredits=void 0,this.lastTimestamp=void 0,this.nodePubkey=e.nodePubkey,this.authorizedWithdrawer=e.authorizedWithdrawer,this.commission=e.commission,this.rootSlot=e.rootSlot,this.votes=e.votes,this.authorizedVoters=e.authorizedVoters,this.priorVoters=e.priorVoters,this.epochCredits=e.epochCredits,this.lastTimestamp=e.lastTimestamp}static fromAccountData(e){const t=Sn.decode(_(e),4);let r=t.rootSlot;return t.rootSlotValid||(r=null),new In({nodePubkey:new R(t.nodePubkey),authorizedWithdrawer:new R(t.authorizedWithdrawer),commission:t.commission,votes:t.votes,rootSlot:r,authorizedVoters:t.authorizedVoters.map(vn),priorVoters:_n(t.priorVoters),epochCredits:t.epochCredits,lastTimestamp:t.lastTimestamp})}}function vn(e){let{authorizedVoter:t,epoch:r}=e;return{epoch:r,authorizedVoter:new R(t)}}function An(e){let{authorizedPubkey:t,epochOfLastAuthorizedSwitch:r,targetEpoch:n}=e;return{authorizedPubkey:new R(t),epochOfLastAuthorizedSwitch:r,targetEpoch:n}}function _n(e){let{buf:t,idx:r,isEmpty:n}=e;return n?[]:[...t.slice(r+1).map(An),...t.slice(0,r).map(An)]}const Pn={http:{devnet:"http://api.devnet.solana.com",testnet:"http://api.testnet.solana.com","mainnet-beta":"http://api.mainnet-beta.solana.com/"},https:{devnet:"https://api.devnet.solana.com",testnet:"https://api.testnet.solana.com","mainnet-beta":"https://api.mainnet-beta.solana.com/"}};function En(e,t){const r=!1===t?"http":"https";if(!e)return Pn[r].devnet;const n=Pn[r][e];if(!n)throw new Error("Unknown ".concat(r," cluster: ").concat(e));return n}async function Bn(e,t,r,n){let i,s;r&&Object.prototype.hasOwnProperty.call(r,"lastValidBlockHeight")||r&&Object.prototype.hasOwnProperty.call(r,"nonceValue")?(i=r,s=n):s=r;const o=s&&{skipPreflight:s.skipPreflight,preflightCommitment:s.preflightCommitment||s.commitment,minContextSlot:s.minContextSlot},a=await e.sendRawTransaction(t,o),c=s&&s.commitment,u=i?e.confirmTransaction(i,c):e.confirmTransaction(a,c),l=(await u).value;if(l.err){if(null!=a)throw new fe({action:null!==o&&void 0!==o&&o.skipPreflight?"send":"simulate",signature:a,transactionMessage:"Status: (".concat(JSON.stringify(l),")")});throw new Error("Raw transaction ".concat(a," failed (").concat(JSON.stringify(l),")"))}return a}const Wn=1e9}}]);